{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# А/В-тесты. Аналитика интернет-магазина"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Описание проекта**\n",
    "\n",
    "Аналитика крупного интернет-магазина. Вместе с отделом маркетинга был подготовлен список гипотез для увеличения выручки. Необходимо приоритизируйте гипотезы, запустить A/B-тест и проанализировать результаты"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Загрузка и подготовка данных "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import numpy as np\n",
    "import scipy.stats as stats\n",
    "import datetime as dt\n",
    "from matplotlib import pyplot as plt\n",
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "tesis = pd.read_csv('/datasets/hypothesis.csv')\n",
    "orders = pd.read_csv('/datasets/orders.csv')\n",
    "visits = pd.read_csv('/datasets/visitors.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 9 entries, 0 to 8\n",
      "Data columns (total 5 columns):\n",
      " #   Column      Non-Null Count  Dtype \n",
      "---  ------      --------------  ----- \n",
      " 0   Hypothesis  9 non-null      object\n",
      " 1   Reach       9 non-null      int64 \n",
      " 2   Impact      9 non-null      int64 \n",
      " 3   Confidence  9 non-null      int64 \n",
      " 4   Efforts     9 non-null      int64 \n",
      "dtypes: int64(4), object(1)\n",
      "memory usage: 488.0+ bytes\n"
     ]
    }
   ],
   "source": [
    "tesis.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "В этом файле у нас 5 столбцов, 9 строк. Названия столбцов в норме. Типы данных нужные. Пропусков нет. Файл готов к работе"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Hypothesis</th>\n",
       "      <th>Reach</th>\n",
       "      <th>Impact</th>\n",
       "      <th>Confidence</th>\n",
       "      <th>Efforts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Добавить два новых канала привлечения трафика,...</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Запустить собственную службу доставки, что сок...</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Добавить блоки рекомендаций товаров на сайт ин...</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Изменить структура категорий, что увеличит кон...</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Изменить цвет фона главной страницы, чтобы уве...</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          Hypothesis  Reach  Impact  \\\n",
       "0  Добавить два новых канала привлечения трафика,...      3      10   \n",
       "1  Запустить собственную службу доставки, что сок...      2       5   \n",
       "2  Добавить блоки рекомендаций товаров на сайт ин...      8       3   \n",
       "3  Изменить структура категорий, что увеличит кон...      8       3   \n",
       "4  Изменить цвет фона главной страницы, чтобы уве...      3       1   \n",
       "\n",
       "   Confidence  Efforts  \n",
       "0           8        6  \n",
       "1           4       10  \n",
       "2           7        3  \n",
       "3           3        8  \n",
       "4           1        1  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tesis.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Столбцы:\n",
    "- Hypothesis — краткое описание гипотезы;\n",
    "- Reach — охват пользователей по 10-балльной шкале;\n",
    "- Impact — влияние на пользователей по 10-балльной шкале;\n",
    "- Confidence — уверенность в гипотезе по 10-балльной шкале;\n",
    "- Efforts — затраты ресурсов на проверку гипотезы по 10-балльной шкале. Чем больше значение Efforts, тем дороже проверка гипотезы."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "#приведем все названия к нижнему регистру\n",
    "tesis.columns = tesis.columns.str.lower()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1197 entries, 0 to 1196\n",
      "Data columns (total 5 columns):\n",
      " #   Column         Non-Null Count  Dtype \n",
      "---  ------         --------------  ----- \n",
      " 0   transactionId  1197 non-null   int64 \n",
      " 1   visitorId      1197 non-null   int64 \n",
      " 2   date           1197 non-null   object\n",
      " 3   revenue        1197 non-null   int64 \n",
      " 4   group          1197 non-null   object\n",
      "dtypes: int64(3), object(2)\n",
      "memory usage: 46.9+ KB\n"
     ]
    }
   ],
   "source": [
    "orders.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "В этом датафрейме 5 колонок, 1197 строк. Два вида типа данных. Пропусков нет. Названия столбцов в норме хорошего стиля"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "#но я все же один столбец переименую\n",
    "orders = orders.rename(columns={'transactionId':'transaction_id'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>transaction_id</th>\n",
       "      <th>visitorId</th>\n",
       "      <th>date</th>\n",
       "      <th>revenue</th>\n",
       "      <th>group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3667963787</td>\n",
       "      <td>3312258926</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>1650</td>\n",
       "      <td>B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2804400009</td>\n",
       "      <td>3642806036</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>730</td>\n",
       "      <td>B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2961555356</td>\n",
       "      <td>4069496402</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>400</td>\n",
       "      <td>A</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3797467345</td>\n",
       "      <td>1196621759</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>9759</td>\n",
       "      <td>B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2282983706</td>\n",
       "      <td>2322279887</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>2308</td>\n",
       "      <td>B</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   transaction_id   visitorId        date  revenue group\n",
       "0      3667963787  3312258926  2019-08-15     1650     B\n",
       "1      2804400009  3642806036  2019-08-15      730     B\n",
       "2      2961555356  4069496402  2019-08-15      400     A\n",
       "3      3797467345  1196621759  2019-08-15     9759     B\n",
       "4      2282983706  2322279887  2019-08-15     2308     B"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "orders.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- transaction_id — идентификатор заказа;\n",
    "- visitorId — идентификатор пользователя, совершившего заказ;\n",
    "- date — дата, когда был совершён заказ;\n",
    "- revenue — выручка заказа;\n",
    "- group — группа A/B-теста, в которую попал заказ."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 62 entries, 0 to 61\n",
      "Data columns (total 3 columns):\n",
      " #   Column    Non-Null Count  Dtype \n",
      "---  ------    --------------  ----- \n",
      " 0   date      62 non-null     object\n",
      " 1   group     62 non-null     object\n",
      " 2   visitors  62 non-null     int64 \n",
      "dtypes: int64(1), object(2)\n",
      "memory usage: 1.6+ KB\n"
     ]
    }
   ],
   "source": [
    "visits.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Тут 3 столбца, 62 строки, два типа данных. Тип данных даты нужно поменять. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>group</th>\n",
       "      <th>visitors</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2019-08-01</td>\n",
       "      <td>A</td>\n",
       "      <td>719</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2019-08-02</td>\n",
       "      <td>A</td>\n",
       "      <td>619</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2019-08-03</td>\n",
       "      <td>A</td>\n",
       "      <td>507</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2019-08-04</td>\n",
       "      <td>A</td>\n",
       "      <td>717</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2019-08-05</td>\n",
       "      <td>A</td>\n",
       "      <td>756</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         date group  visitors\n",
       "0  2019-08-01     A       719\n",
       "1  2019-08-02     A       619\n",
       "2  2019-08-03     A       507\n",
       "3  2019-08-04     A       717\n",
       "4  2019-08-05     A       756"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "visits.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- date — дата;\n",
    "- group — группа A/B-теста;\n",
    "- visitors — количество пользователей в указанную дату в указанной группе A/B-теста"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "#меняем тип данных даты\n",
    "visits['date'] = visits['date'].map(\n",
    "    lambda x: dt.datetime.strptime(x, '%Y-%m-%d')\n",
    ")\n",
    "orders['date'] = orders['date'].map(\n",
    "    lambda x: dt.datetime.strptime(x, '%Y-%m-%d')\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "hypothesis    0\n",
       "reach         0\n",
       "impact        0\n",
       "confidence    0\n",
       "efforts       0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#пропусков вроде не было. Но стоит перепроверить\n",
    "tesis.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "date        0\n",
       "group       0\n",
       "visitors    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "visits.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "transaction_id    0\n",
       "visitorId         0\n",
       "date              0\n",
       "revenue           0\n",
       "group             0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "orders.isna().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Приоритизация гипотез"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Фреймворк ICE для приоритизации гипотез"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hypothesis</th>\n",
       "      <th>reach</th>\n",
       "      <th>impact</th>\n",
       "      <th>confidence</th>\n",
       "      <th>efforts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Добавить два новых канала привлечения трафика, что позволит привлекать на 30% больше пользователей</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Запустить собственную службу доставки, что сократит срок доставки заказов</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Добавить блоки рекомендаций товаров на сайт интернет магазина, чтобы повысить конверсию и средний чек заказа</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Изменить структура категорий, что увеличит конверсию, т.к. пользователи быстрее найдут нужный товар</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Изменить цвет фона главной страницы, чтобы увеличить вовлеченность пользователей</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Добавить страницу отзывов клиентов о магазине, что позволит увеличить количество заказов</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Показать на главной странице баннеры с актуальными акциями и распродажами, чтобы увеличить конверсию</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Добавить форму подписки на все основные страницы, чтобы собрать базу клиентов для email-рассылок</td>\n",
       "      <td>10</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Запустить акцию, дающую скидку на товар в день рождения</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                                                     hypothesis  \\\n",
       "0  Добавить два новых канала привлечения трафика, что позволит привлекать на 30% больше пользователей             \n",
       "1  Запустить собственную службу доставки, что сократит срок доставки заказов                                      \n",
       "2  Добавить блоки рекомендаций товаров на сайт интернет магазина, чтобы повысить конверсию и средний чек заказа   \n",
       "3  Изменить структура категорий, что увеличит конверсию, т.к. пользователи быстрее найдут нужный товар            \n",
       "4  Изменить цвет фона главной страницы, чтобы увеличить вовлеченность пользователей                               \n",
       "5  Добавить страницу отзывов клиентов о магазине, что позволит увеличить количество заказов                       \n",
       "6  Показать на главной странице баннеры с актуальными акциями и распродажами, чтобы увеличить конверсию           \n",
       "7  Добавить форму подписки на все основные страницы, чтобы собрать базу клиентов для email-рассылок               \n",
       "8  Запустить акцию, дающую скидку на товар в день рождения                                                        \n",
       "\n",
       "   reach  impact  confidence  efforts  \n",
       "0   3     10       8           6       \n",
       "1   2      5       4          10       \n",
       "2   8      3       7           3       \n",
       "3   8      3       3           8       \n",
       "4   3      1       1           1       \n",
       "5   3      2       2           3       \n",
       "6   5      3       8           3       \n",
       "7  10      7       8           5       \n",
       "8   1      9       9           5       "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#понадобится таблица tesis\n",
    "\n",
    "pd.options.display.max_colwidth = 3\n",
    "tesis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "8    16.200000\n",
       "0    13.333333\n",
       "7    11.200000\n",
       "6    8.000000 \n",
       "2    7.000000 \n",
       "1    2.000000 \n",
       "5    1.333333 \n",
       "3    1.125000 \n",
       "4    1.000000 \n",
       "dtype: float64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ICE = (tesis['impact']*tesis['confidence']) / tesis['efforts']\n",
    "ICE.sort_values(ascending = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hypothesis</th>\n",
       "      <th>ICE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Запустить акцию, дающую скидку на товар в день рождения</td>\n",
       "      <td>16.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Добавить два новых канала привлечения трафика, что позволит привлекать на 30% больше пользователей</td>\n",
       "      <td>13.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Добавить форму подписки на все основные страницы, чтобы собрать базу клиентов для email-рассылок</td>\n",
       "      <td>11.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Показать на главной странице баннеры с актуальными акциями и распродажами, чтобы увеличить конверсию</td>\n",
       "      <td>8.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Добавить блоки рекомендаций товаров на сайт интернет магазина, чтобы повысить конверсию и средний чек заказа</td>\n",
       "      <td>7.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Запустить собственную службу доставки, что сократит срок доставки заказов</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Добавить страницу отзывов клиентов о магазине, что позволит увеличить количество заказов</td>\n",
       "      <td>1.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Изменить структура категорий, что увеличит конверсию, т.к. пользователи быстрее найдут нужный товар</td>\n",
       "      <td>1.125000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Изменить цвет фона главной страницы, чтобы увеличить вовлеченность пользователей</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                                                     hypothesis  \\\n",
       "8  Запустить акцию, дающую скидку на товар в день рождения                                                        \n",
       "0  Добавить два новых канала привлечения трафика, что позволит привлекать на 30% больше пользователей             \n",
       "7  Добавить форму подписки на все основные страницы, чтобы собрать базу клиентов для email-рассылок               \n",
       "6  Показать на главной странице баннеры с актуальными акциями и распродажами, чтобы увеличить конверсию           \n",
       "2  Добавить блоки рекомендаций товаров на сайт интернет магазина, чтобы повысить конверсию и средний чек заказа   \n",
       "1  Запустить собственную службу доставки, что сократит срок доставки заказов                                      \n",
       "5  Добавить страницу отзывов клиентов о магазине, что позволит увеличить количество заказов                       \n",
       "3  Изменить структура категорий, что увеличит конверсию, т.к. пользователи быстрее найдут нужный товар            \n",
       "4  Изменить цвет фона главной страницы, чтобы увеличить вовлеченность пользователей                               \n",
       "\n",
       "         ICE  \n",
       "8  16.200000  \n",
       "0  13.333333  \n",
       "7  11.200000  \n",
       "6  8.000000   \n",
       "2  7.000000   \n",
       "1  2.000000   \n",
       "5  1.333333   \n",
       "3  1.125000   \n",
       "4  1.000000   "
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tesis['ICE'] = (tesis['impact']*tesis['confidence']) / tesis['efforts']\n",
    "tesis[['hypothesis', 'ICE']].sort_values('ICE', ascending = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "ICE - это один из популярных способов приоритизации задач. В таблице выше мы видим распределение в порядке убывания."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Фреймворк RICE для приоритизации гипотез"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "7    112.0\n",
       "2    56.0 \n",
       "0    40.0 \n",
       "6    40.0 \n",
       "8    16.2 \n",
       "3    9.0  \n",
       "1    4.0  \n",
       "5    4.0  \n",
       "4    3.0  \n",
       "dtype: float64"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "RICE = (tesis['reach']*tesis['impact']*tesis['confidence']) / tesis['efforts']\n",
    "RICE.sort_values(ascending = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hypothesis</th>\n",
       "      <th>RICE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Добавить форму подписки на все основные страницы, чтобы собрать базу клиентов для email-рассылок</td>\n",
       "      <td>112.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Добавить блоки рекомендаций товаров на сайт интернет магазина, чтобы повысить конверсию и средний чек заказа</td>\n",
       "      <td>56.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Добавить два новых канала привлечения трафика, что позволит привлекать на 30% больше пользователей</td>\n",
       "      <td>40.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Показать на главной странице баннеры с актуальными акциями и распродажами, чтобы увеличить конверсию</td>\n",
       "      <td>40.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Запустить акцию, дающую скидку на товар в день рождения</td>\n",
       "      <td>16.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Изменить структура категорий, что увеличит конверсию, т.к. пользователи быстрее найдут нужный товар</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Запустить собственную службу доставки, что сократит срок доставки заказов</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Добавить страницу отзывов клиентов о магазине, что позволит увеличить количество заказов</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Изменить цвет фона главной страницы, чтобы увеличить вовлеченность пользователей</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                                                     hypothesis  \\\n",
       "7  Добавить форму подписки на все основные страницы, чтобы собрать базу клиентов для email-рассылок               \n",
       "2  Добавить блоки рекомендаций товаров на сайт интернет магазина, чтобы повысить конверсию и средний чек заказа   \n",
       "0  Добавить два новых канала привлечения трафика, что позволит привлекать на 30% больше пользователей             \n",
       "6  Показать на главной странице баннеры с актуальными акциями и распродажами, чтобы увеличить конверсию           \n",
       "8  Запустить акцию, дающую скидку на товар в день рождения                                                        \n",
       "3  Изменить структура категорий, что увеличит конверсию, т.к. пользователи быстрее найдут нужный товар            \n",
       "1  Запустить собственную службу доставки, что сократит срок доставки заказов                                      \n",
       "5  Добавить страницу отзывов клиентов о магазине, что позволит увеличить количество заказов                       \n",
       "4  Изменить цвет фона главной страницы, чтобы увеличить вовлеченность пользователей                               \n",
       "\n",
       "    RICE  \n",
       "7  112.0  \n",
       "2  56.0   \n",
       "0  40.0   \n",
       "6  40.0   \n",
       "8  16.2   \n",
       "3  9.0    \n",
       "1  4.0    \n",
       "5  4.0    \n",
       "4  3.0    "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tesis['RICE'] = (tesis['reach']*tesis['impact']*tesis['confidence']) / tesis['efforts']\n",
    "tesis[['hypothesis', 'RICE']].sort_values('RICE', ascending = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Порядок задач изменился, после добавления оценки количества пользователей (охвата), которых затрагивает изменение. \n",
    "\n",
    "Но изменился весь порядок, кроме последней задачи и четвертой\n",
    "- в .ICE - 8, 0, 7, 6, 2, 1, 5, 3, 4\n",
    "- в RICE - 7, 2, 0, 6, 8, 3, 1, 5, 4\n",
    "\n",
    "Учитывая параметр `reach` мы оцениваем приоритет более точно"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Анализ A/B-теста"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1031"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(orders['visitorId'].unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>visitorId</th>\n",
       "      <th>un_group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>8300375</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>199603092</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>232979603</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>237748145</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>276558944</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    visitorId  un_group\n",
       "2   8300375     2      \n",
       "44  199603092   2      \n",
       "51  232979603   2      \n",
       "55  237748145   2      \n",
       "66  276558944   2      "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#создаем таблицу с пользователями, у кого 2 группы\n",
    "group = orders.groupby('visitorId')['group'].nunique().reset_index()\n",
    "group = group.query('group > 1')\n",
    "group = group.rename(columns={'group':'un_group'})\n",
    "group.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>transaction_id</th>\n",
       "      <th>visitorId</th>\n",
       "      <th>date</th>\n",
       "      <th>revenue</th>\n",
       "      <th>group</th>\n",
       "      <th>un_group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3667963787</td>\n",
       "      <td>3312258926</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>1650</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2804400009</td>\n",
       "      <td>3642806036</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>730</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2961555356</td>\n",
       "      <td>4069496402</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>400</td>\n",
       "      <td>A</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3797467345</td>\n",
       "      <td>1196621759</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>9759</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2282983706</td>\n",
       "      <td>2322279887</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>2308</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1192</th>\n",
       "      <td>2662137336</td>\n",
       "      <td>3733762160</td>\n",
       "      <td>2019-08-14</td>\n",
       "      <td>6490</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1193</th>\n",
       "      <td>2203539145</td>\n",
       "      <td>370388673</td>\n",
       "      <td>2019-08-14</td>\n",
       "      <td>3190</td>\n",
       "      <td>A</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1194</th>\n",
       "      <td>1807773912</td>\n",
       "      <td>573423106</td>\n",
       "      <td>2019-08-14</td>\n",
       "      <td>10550</td>\n",
       "      <td>A</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1195</th>\n",
       "      <td>1947021204</td>\n",
       "      <td>1614305549</td>\n",
       "      <td>2019-08-14</td>\n",
       "      <td>100</td>\n",
       "      <td>A</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1196</th>\n",
       "      <td>3936777065</td>\n",
       "      <td>2108080724</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>202740</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1197 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      transaction_id   visitorId       date  revenue group  un_group\n",
       "0     3667963787      3312258926 2019-08-15  1650      B   NaN      \n",
       "1     2804400009      3642806036 2019-08-15  730       B   NaN      \n",
       "2     2961555356      4069496402 2019-08-15  400       A    2.0     \n",
       "3     3797467345      1196621759 2019-08-15  9759      B   NaN      \n",
       "4     2282983706      2322279887 2019-08-15  2308      B   NaN      \n",
       "...          ...             ...        ...   ...     ..    ..      \n",
       "1192  2662137336      3733762160 2019-08-14  6490      B   NaN      \n",
       "1193  2203539145      370388673  2019-08-14  3190      A   NaN      \n",
       "1194  1807773912      573423106  2019-08-14  10550     A   NaN      \n",
       "1195  1947021204      1614305549 2019-08-14  100       A    2.0     \n",
       "1196  3936777065      2108080724 2019-08-15  202740    B   NaN      \n",
       "\n",
       "[1197 rows x 6 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#\"пришиваем\" таблицу к основной\n",
    "orders = orders.merge(group, how='left')\n",
    "orders"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Учитывая, что таких пользователей всего 58. Это всего лишь 5% от всего пользователей. Предлагаю их удалить, результат исследования от этого не пострадает"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>transaction_id</th>\n",
       "      <th>visitorId</th>\n",
       "      <th>date</th>\n",
       "      <th>revenue</th>\n",
       "      <th>group</th>\n",
       "      <th>un_group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3667963787</td>\n",
       "      <td>3312258926</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>1650</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2804400009</td>\n",
       "      <td>3642806036</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>730</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3797467345</td>\n",
       "      <td>1196621759</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>9759</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2282983706</td>\n",
       "      <td>2322279887</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>2308</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>182168103</td>\n",
       "      <td>935554773</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>2210</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1191</th>\n",
       "      <td>3592955527</td>\n",
       "      <td>608641596</td>\n",
       "      <td>2019-08-14</td>\n",
       "      <td>16490</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1192</th>\n",
       "      <td>2662137336</td>\n",
       "      <td>3733762160</td>\n",
       "      <td>2019-08-14</td>\n",
       "      <td>6490</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1193</th>\n",
       "      <td>2203539145</td>\n",
       "      <td>370388673</td>\n",
       "      <td>2019-08-14</td>\n",
       "      <td>3190</td>\n",
       "      <td>A</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1194</th>\n",
       "      <td>1807773912</td>\n",
       "      <td>573423106</td>\n",
       "      <td>2019-08-14</td>\n",
       "      <td>10550</td>\n",
       "      <td>A</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1196</th>\n",
       "      <td>3936777065</td>\n",
       "      <td>2108080724</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>202740</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1016 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      transaction_id   visitorId       date  revenue group  un_group\n",
       "0     3667963787      3312258926 2019-08-15  1650      B   NaN      \n",
       "1     2804400009      3642806036 2019-08-15  730       B   NaN      \n",
       "3     3797467345      1196621759 2019-08-15  9759      B   NaN      \n",
       "4     2282983706      2322279887 2019-08-15  2308      B   NaN      \n",
       "5     182168103       935554773  2019-08-15  2210      B   NaN      \n",
       "...         ...             ...         ...   ...     ..    ..      \n",
       "1191  3592955527      608641596  2019-08-14  16490     B   NaN      \n",
       "1192  2662137336      3733762160 2019-08-14  6490      B   NaN      \n",
       "1193  2203539145      370388673  2019-08-14  3190      A   NaN      \n",
       "1194  1807773912      573423106  2019-08-14  10550     A   NaN      \n",
       "1196  3936777065      2108080724 2019-08-15  202740    B   NaN      \n",
       "\n",
       "[1016 rows x 6 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#фильтруем датасет\n",
    "orders = orders.query('un_group != 2.0')\n",
    "orders"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "973"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(orders['visitorId'].unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>transaction_id</th>\n",
       "      <th>visitorId</th>\n",
       "      <th>date</th>\n",
       "      <th>revenue</th>\n",
       "      <th>group</th>\n",
       "      <th>un_group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [transaction_id, visitorId, date, revenue, group, un_group]\n",
       "Index: []"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#проверим, что нет пользователя с id, которое мы удалили\n",
    "orders.query('visitorId == \"199603092\"')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Удаление произошло точно. Это заметно и в количестве уникальных пользователей. Было 1031, стало 973. Разница - ровно 58"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Проверим даты и группы в таблицах посетителей и заказов, чтобы верно \"склеить\" данные"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2019-08-01</td>\n",
       "      <td>A</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2019-08-01</td>\n",
       "      <td>B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2019-08-02</td>\n",
       "      <td>A</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2019-08-02</td>\n",
       "      <td>B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2019-08-03</td>\n",
       "      <td>A</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>2019-08-29</td>\n",
       "      <td>B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>2019-08-30</td>\n",
       "      <td>A</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>2019-08-30</td>\n",
       "      <td>B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>2019-08-31</td>\n",
       "      <td>A</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>2019-08-31</td>\n",
       "      <td>B</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>62 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         date group\n",
       "0  2019-08-01   A  \n",
       "1  2019-08-01   B  \n",
       "2  2019-08-02   A  \n",
       "3  2019-08-02   B  \n",
       "4  2019-08-03   A  \n",
       "..        ...  ..  \n",
       "57 2019-08-29   B  \n",
       "58 2019-08-30   A  \n",
       "59 2019-08-30   B  \n",
       "60 2019-08-31   A  \n",
       "61 2019-08-31   B  \n",
       "\n",
       "[62 rows x 2 columns]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "orders[['date','group']].drop_duplicates().sort_values(by=['date','group']).reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>62 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    date  group\n",
       "0   True  True \n",
       "1   True  True \n",
       "2   True  True \n",
       "3   True  True \n",
       "4   True  True \n",
       "..   ...   ... \n",
       "57  True  True \n",
       "58  True  True \n",
       "59  True  True \n",
       "60  True  True \n",
       "61  True  True \n",
       "\n",
       "[62 rows x 2 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dat = orders[['date','group']].drop_duplicates().sort_values(by=['date','group']).reset_index(drop=True) == \\\n",
    "                        visits[['date','group']].drop_duplicates().sort_values(by=['date','group']).reset_index(drop=True)\n",
    "dat"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(62, 62)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dat['date'].sum() , dat['group'].sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Все пары дата-группа в таблицах одинаковы, можно работать дальше"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### График кумулятивной выручки по группам"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Рассчитаем медианную выручку за день в каждой группе, чтобы иметь представление о цифрах"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "group\n",
       "A    92365 \n",
       "B    107340\n",
       "Name: revenue, dtype: int64"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "orders.groupby(['date','group'])['revenue'].sum().groupby('group').median()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>A</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>2019-08-16</td>\n",
       "      <td>A</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>2019-08-16</td>\n",
       "      <td>B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>2019-08-01</td>\n",
       "      <td>A</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         date group\n",
       "0  2019-08-15   B  \n",
       "7  2019-08-15   A  \n",
       "45 2019-08-16   A  \n",
       "47 2019-08-16   B  \n",
       "55 2019-08-01   A  "
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# создаем массив уникальных пар значений дат и групп теста\n",
    "datesGroups = orders[['date','group']].drop_duplicates() \n",
    "datesGroups.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Соберём агрегированные кумулятивные по дням данные о заказах в несколько действий.\n",
    "Получим строки таблицы orders, дата которых меньше или равна дате элемента из datesGroups, а группа теста равна группе из datesGroups"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>group</th>\n",
       "      <th>transaction_id</th>\n",
       "      <th>visitorId</th>\n",
       "      <th>revenue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>2019-08-01</td>\n",
       "      <td>A</td>\n",
       "      <td>23</td>\n",
       "      <td>19</td>\n",
       "      <td>142779</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>2019-08-01</td>\n",
       "      <td>B</td>\n",
       "      <td>17</td>\n",
       "      <td>17</td>\n",
       "      <td>59758</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>175</th>\n",
       "      <td>2019-08-02</td>\n",
       "      <td>A</td>\n",
       "      <td>42</td>\n",
       "      <td>36</td>\n",
       "      <td>234381</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173</th>\n",
       "      <td>2019-08-02</td>\n",
       "      <td>B</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>221801</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>291</th>\n",
       "      <td>2019-08-03</td>\n",
       "      <td>A</td>\n",
       "      <td>66</td>\n",
       "      <td>60</td>\n",
       "      <td>346854</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          date group  transaction_id  visitorId  revenue\n",
       "55  2019-08-01   A    23              19         142779 \n",
       "66  2019-08-01   B    17              17         59758  \n",
       "175 2019-08-02   A    42              36         234381 \n",
       "173 2019-08-02   B    40              39         221801 \n",
       "291 2019-08-03   A    66              60         346854 "
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ordersAggregated = datesGroups.apply(\n",
    "    lambda x: orders[np.logical_and(orders['date'] <= x['date'], orders['group'] == x['group'])].agg({\n",
    "'date' : 'max',\n",
    "'group' : 'max',\n",
    "'transaction_id' : pd.Series.nunique,\n",
    "'visitorId' : pd.Series.nunique,\n",
    "'revenue' : 'sum'}), axis=1).sort_values(by=['date','group']) \n",
    "\n",
    "ordersAggregated.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>group</th>\n",
       "      <th>visitors</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>2019-08-01</td>\n",
       "      <td>A</td>\n",
       "      <td>719</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>2019-08-01</td>\n",
       "      <td>B</td>\n",
       "      <td>713</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>175</th>\n",
       "      <td>2019-08-02</td>\n",
       "      <td>A</td>\n",
       "      <td>1338</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173</th>\n",
       "      <td>2019-08-02</td>\n",
       "      <td>B</td>\n",
       "      <td>1294</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>291</th>\n",
       "      <td>2019-08-03</td>\n",
       "      <td>A</td>\n",
       "      <td>1845</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          date group  visitors\n",
       "55  2019-08-01   A    719     \n",
       "66  2019-08-01   B    713     \n",
       "175 2019-08-02   A    1338    \n",
       "173 2019-08-02   B    1294    \n",
       "291 2019-08-03   A    1845    "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "visitorsAggregated = datesGroups.apply(\n",
    "    lambda x: visits[np.logical_and(visits['date'] <= x['date'], visits['group'] == x['group'])].agg({\n",
    "        'date' : 'max', 'group' : 'max', 'visitors' : 'sum'}), axis=1).sort_values(by=['date','group'])\n",
    "visitorsAggregated.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>group</th>\n",
       "      <th>orders</th>\n",
       "      <th>buyers</th>\n",
       "      <th>revenue</th>\n",
       "      <th>visitors</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2019-08-01</td>\n",
       "      <td>A</td>\n",
       "      <td>23</td>\n",
       "      <td>19</td>\n",
       "      <td>142779</td>\n",
       "      <td>719</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2019-08-01</td>\n",
       "      <td>B</td>\n",
       "      <td>17</td>\n",
       "      <td>17</td>\n",
       "      <td>59758</td>\n",
       "      <td>713</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2019-08-02</td>\n",
       "      <td>A</td>\n",
       "      <td>42</td>\n",
       "      <td>36</td>\n",
       "      <td>234381</td>\n",
       "      <td>1338</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2019-08-02</td>\n",
       "      <td>B</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>221801</td>\n",
       "      <td>1294</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2019-08-03</td>\n",
       "      <td>A</td>\n",
       "      <td>66</td>\n",
       "      <td>60</td>\n",
       "      <td>346854</td>\n",
       "      <td>1845</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        date group  orders  buyers  revenue  visitors\n",
       "0 2019-08-01   A    23      19      142779   719     \n",
       "1 2019-08-01   B    17      17      59758    713     \n",
       "2 2019-08-02   A    42      36      234381   1338    \n",
       "3 2019-08-02   B    40      39      221801   1294    \n",
       "4 2019-08-03   A    66      60      346854   1845    "
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Объединим обе таблицы в одну с понятными названиями столбцов:\n",
    "\n",
    "# объединяем кумулятивные данные в одной таблице и присваиваем ее столбцам понятные названия\n",
    "cumulativeData = ordersAggregated.merge(visitorsAggregated, left_on=['date', 'group'], right_on=['date', 'group'])\n",
    "cumulativeData.columns = ['date', 'group', 'orders', 'buyers', 'revenue', 'visitors']\n",
    "\n",
    "cumulativeData.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Построим графики кумулятивной выручки по дням и группам A/B-тестирования:\n",
    "\n",
    "# датафрейм с кумулятивным количеством заказов и кумулятивной выручкой по дням в группе А\n",
    "cumulativeRevenueA = cumulativeData[cumulativeData['group']=='A'][['date','revenue', 'orders']]\n",
    "\n",
    "# датафрейм с кумулятивным количеством заказов и кумулятивной выручкой по дням в группе B\n",
    "cumulativeRevenueB = cumulativeData[cumulativeData['group']=='B'][['date','revenue', 'orders']]\n",
    "\n",
    "plt.figure(figsize=(12,5))\n",
    "\n",
    "# Строим график выручки группы А\n",
    "plt.plot(cumulativeRevenueA['date'], cumulativeRevenueA['revenue'], label='A')\n",
    "\n",
    "# Строим график выручки группы B\n",
    "plt.plot(cumulativeRevenueB['date'], cumulativeRevenueB['revenue'], label='B')\n",
    "\n",
    "plt.legend() \n",
    "plt.title('График кумулятивной выручки по группам')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Выручка почти равномерно увеличивается в течение всего теста. Хороший знак.\n",
    "Однако график выручки группы В в нескольких точках резко растет. Это может сигнализировать о всплесках числа заказов, либо о появлении очень дорогих заказов в выборке (чуть позде это проверим)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### График кумулятивного среднего чека по группам"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Построим графики среднего чека по группам — разделим кумулятивную выручку на кумулятивное число заказов:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12,5))\n",
    "plt.plot(cumulativeRevenueA['date'], cumulativeRevenueA['revenue']/cumulativeRevenueA['orders'], label='A')\n",
    "plt.plot(cumulativeRevenueB['date'], cumulativeRevenueB['revenue']/cumulativeRevenueB['orders'], label='B')\n",
    "plt.legend() \n",
    "plt.title('График кумулятивного среднего чека по группам')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Средний чек тоже становится равномерным ближе к концу теста: более менее установился для группы A (но немного увеличивается и продолжает падать для группы B. Возможно, в группу B в середине теста попали крупные заказы (резкий всплеск на графике). Тогда ей нужно больше данных, чтобы прийти к реальному среднему чеку и установиться на его уровне. Но разница в группах не маленькая к концу теста."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### График относительного изменения кумулятивного среднего чека группы B к группе A"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Построим график относительного различия для среднего чека. Добавив горизонтальную ось методом axhline() (от англ. horizontal line across the axis*, «горизонтальная линия поперек оси»)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# собираем данные в одном датафрейме\n",
    "mergedCumulativeRevenue = cumulativeRevenueA.merge(cumulativeRevenueB, left_on='date', right_on='date', how='left', suffixes=['A', 'B'])\n",
    "\n",
    "plt.figure(figsize=(12,5))\n",
    "\n",
    "# cтроим отношение средних чеков\n",
    "plt.plot(mergedCumulativeRevenue['date'], (mergedCumulativeRevenue['revenueB']/mergedCumulativeRevenue['ordersB'])/(mergedCumulativeRevenue['revenueA']/mergedCumulativeRevenue['ordersA'])-1)\n",
    "\n",
    "# добавляем ось X\n",
    "plt.axhline(y=0, color='red', linestyle='--') \n",
    "plt.title('График относительного изменения среднего чека группы В к А')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "В нескольких точках график различия между сегментами резко «скачет» и вниз и вверх. Точно есть крупные заказы и выбросы."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### График кумулятивной конверсии по группам"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>group</th>\n",
       "      <th>orders</th>\n",
       "      <th>buyers</th>\n",
       "      <th>revenue</th>\n",
       "      <th>visitors</th>\n",
       "      <th>conversion</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2019-08-01</td>\n",
       "      <td>A</td>\n",
       "      <td>23</td>\n",
       "      <td>19</td>\n",
       "      <td>142779</td>\n",
       "      <td>719</td>\n",
       "      <td>0.031989</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2019-08-01</td>\n",
       "      <td>B</td>\n",
       "      <td>17</td>\n",
       "      <td>17</td>\n",
       "      <td>59758</td>\n",
       "      <td>713</td>\n",
       "      <td>0.023843</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2019-08-02</td>\n",
       "      <td>A</td>\n",
       "      <td>42</td>\n",
       "      <td>36</td>\n",
       "      <td>234381</td>\n",
       "      <td>1338</td>\n",
       "      <td>0.031390</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2019-08-02</td>\n",
       "      <td>B</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>221801</td>\n",
       "      <td>1294</td>\n",
       "      <td>0.030912</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2019-08-03</td>\n",
       "      <td>A</td>\n",
       "      <td>66</td>\n",
       "      <td>60</td>\n",
       "      <td>346854</td>\n",
       "      <td>1845</td>\n",
       "      <td>0.035772</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        date group  orders  buyers  revenue  visitors  conversion\n",
       "0 2019-08-01   A    23      19      142779   719       0.031989  \n",
       "1 2019-08-01   B    17      17      59758    713       0.023843  \n",
       "2 2019-08-02   A    42      36      234381   1338      0.031390  \n",
       "3 2019-08-02   B    40      39      221801   1294      0.030912  \n",
       "4 2019-08-03   A    66      60      346854   1845      0.035772  "
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# считаем кумулятивную конверсию\n",
    "cumulativeData['conversion'] = cumulativeData['orders']/cumulativeData['visitors']\n",
    "cumulativeData.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# отделяем данные по группе A\n",
    "cumulativeDataA = cumulativeData[cumulativeData['group']=='A']\n",
    "\n",
    "# отделяем данные по группе B\n",
    "cumulativeDataB = cumulativeData[cumulativeData['group']=='B']\n",
    "\n",
    "plt.figure(figsize=(12,5))\n",
    "\n",
    "# строим графики\n",
    "plt.plot(cumulativeDataA['date'], cumulativeDataA['conversion'], label='A')\n",
    "plt.plot(cumulativeDataB['date'], cumulativeDataB['conversion'], label='B')\n",
    "plt.legend()\n",
    "plt.title('График кумулятивной конверсии по группам')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Не очень симметричный график получился. Группы колебались \"вся дорогу\", но конверсия группы В вырвалась вперёд почти сразу и зафиксировалась в лидерах и в целом повышалась, а конверсия группы А просела и двигалась вниз."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### График относительного изменения кумулятивной конверсии группы B к группе A"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Чтобы посторить такой график и правильно его проанализировать, но установить линию группы А"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.03577235772357724"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mergedCumulativeConversions = cumulativeDataA[['date','conversion']].merge(cumulativeDataB[['date','conversion']], left_on='date', right_on='date', how='left', suffixes=['A', 'B'])\n",
    "mergedCumulativeConversions['conversionA'].max()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 864x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "mergedCumulativeConversions = cumulativeDataA[['date','conversion']].merge(cumulativeDataB[['date','conversion']], left_on='date', right_on='date', how='left', suffixes=['A', 'B'])\n",
    "\n",
    "plt.figure(figsize=(12,5))\n",
    "\n",
    "plt.plot(mergedCumulativeConversions['date'], mergedCumulativeConversions['conversionB']/mergedCumulativeConversions['conversionA']-1, label=\"Относительный прирост\")\n",
    "plt.legend()\n",
    "\n",
    "plt.axhline(y=0, color='black', linestyle='--')\n",
    "plt.axhline(y=0.036, color='red', linestyle='--')\n",
    "plt.title('График относительного изменения конверсии группы B к А')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "В начале теста группа B значительно проигрывала группе A, затем вырвалась вперёд. Потом её конверсия снова падала, но не ниже А, в целом постепенно росла.\n",
    "Отношение конверсии ещё не установилось, и сейчас делать какие-либо выводы по тесту нельзя. Сперва стоит проанализировать аномалии, возможно, они изменят картину. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Точечный график количества заказов по пользователям"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>transaction_id</th>\n",
       "      <th>visitorId</th>\n",
       "      <th>date</th>\n",
       "      <th>revenue</th>\n",
       "      <th>group</th>\n",
       "      <th>un_group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3667963787</td>\n",
       "      <td>3312258926</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>1650</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2804400009</td>\n",
       "      <td>3642806036</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>730</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3797467345</td>\n",
       "      <td>1196621759</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>9759</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2282983706</td>\n",
       "      <td>2322279887</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>2308</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>182168103</td>\n",
       "      <td>935554773</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>2210</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1191</th>\n",
       "      <td>3592955527</td>\n",
       "      <td>608641596</td>\n",
       "      <td>2019-08-14</td>\n",
       "      <td>16490</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1192</th>\n",
       "      <td>2662137336</td>\n",
       "      <td>3733762160</td>\n",
       "      <td>2019-08-14</td>\n",
       "      <td>6490</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1193</th>\n",
       "      <td>2203539145</td>\n",
       "      <td>370388673</td>\n",
       "      <td>2019-08-14</td>\n",
       "      <td>3190</td>\n",
       "      <td>A</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1194</th>\n",
       "      <td>1807773912</td>\n",
       "      <td>573423106</td>\n",
       "      <td>2019-08-14</td>\n",
       "      <td>10550</td>\n",
       "      <td>A</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1196</th>\n",
       "      <td>3936777065</td>\n",
       "      <td>2108080724</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>202740</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1016 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      transaction_id   visitorId       date  revenue group  un_group\n",
       "0     3667963787      3312258926 2019-08-15  1650      B   NaN      \n",
       "1     2804400009      3642806036 2019-08-15  730       B   NaN      \n",
       "3     3797467345      1196621759 2019-08-15  9759      B   NaN      \n",
       "4     2282983706      2322279887 2019-08-15  2308      B   NaN      \n",
       "5     182168103       935554773  2019-08-15  2210      B   NaN      \n",
       "...         ...             ...         ...   ...     ..    ..      \n",
       "1191  3592955527      608641596  2019-08-14  16490     B   NaN      \n",
       "1192  2662137336      3733762160 2019-08-14  6490      B   NaN      \n",
       "1193  2203539145      370388673  2019-08-14  3190      A   NaN      \n",
       "1194  1807773912      573423106  2019-08-14  10550     A   NaN      \n",
       "1196  3936777065      2108080724 2019-08-15  202740    B   NaN      \n",
       "\n",
       "[1016 rows x 6 columns]"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "orders"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         userId  orders\n",
      "908  3967698036   3    \n",
      "55   249864742    3    \n",
      "478  2108163459   3    \n",
      "687  2988190573   3    \n",
      "890  3908431265   3    \n",
      "138  611059232    3    \n",
      "632  2742574263   3    \n",
      "157  678354126    2    \n",
      "323  1404560065   2    \n",
      "452  1985475298   2    \n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ordersByUsers = (\n",
    "    orders.groupby('visitorId', as_index=False)\n",
    "    .agg({'transaction_id': 'nunique'})\n",
    ")\n",
    "ordersByUsers.columns = ['userId', 'orders']\n",
    "\n",
    "print(ordersByUsers.sort_values(by='orders', ascending=False).head(10))\n",
    "\n",
    "plt.hist(ordersByUsers['orders']) \n",
    "plt.title('Гистрограмма распределения количества заказов на одного пользователя')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Большинство покупателей заказывали только один раз. Но есть заказы и по 2-3 раза"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "x_values = pd.Series(range(0,len(ordersByUsers)))\n",
    "\n",
    "plt.scatter(x_values, ordersByUsers['orders']) \n",
    "plt.title('Точечная диаграмма числа заказов на одного пользователя')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Выводы подтверждаются"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 95-й и 99-й перцентили количества заказов на пользователя"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1., 2.])"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.percentile(ordersByUsers['orders'], [95, 99])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Не более 5% пользователей оформляли больше чем 1 заказ. И 1% оформлял более 2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Точечный график стоимостей заказов"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>transaction_id</th>\n",
       "      <th>visitorId</th>\n",
       "      <th>date</th>\n",
       "      <th>revenue</th>\n",
       "      <th>group</th>\n",
       "      <th>un_group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>425</th>\n",
       "      <td>590470918</td>\n",
       "      <td>1920142716</td>\n",
       "      <td>2019-08-19</td>\n",
       "      <td>1294500</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1196</th>\n",
       "      <td>3936777065</td>\n",
       "      <td>2108080724</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>202740</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1136</th>\n",
       "      <td>666610489</td>\n",
       "      <td>1307669133</td>\n",
       "      <td>2019-08-13</td>\n",
       "      <td>92550</td>\n",
       "      <td>A</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>744</th>\n",
       "      <td>3668308183</td>\n",
       "      <td>888512513</td>\n",
       "      <td>2019-08-27</td>\n",
       "      <td>86620</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>743</th>\n",
       "      <td>3603576309</td>\n",
       "      <td>4133034833</td>\n",
       "      <td>2019-08-09</td>\n",
       "      <td>67990</td>\n",
       "      <td>A</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1103</th>\n",
       "      <td>1348774318</td>\n",
       "      <td>1164614297</td>\n",
       "      <td>2019-08-12</td>\n",
       "      <td>66350</td>\n",
       "      <td>A</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1099</th>\n",
       "      <td>316924019</td>\n",
       "      <td>148427295</td>\n",
       "      <td>2019-08-12</td>\n",
       "      <td>65710</td>\n",
       "      <td>A</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>949</th>\n",
       "      <td>1347999392</td>\n",
       "      <td>887908475</td>\n",
       "      <td>2019-08-21</td>\n",
       "      <td>60450</td>\n",
       "      <td>A</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>940</th>\n",
       "      <td>2420050534</td>\n",
       "      <td>4003628586</td>\n",
       "      <td>2019-08-08</td>\n",
       "      <td>58550</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>131</th>\n",
       "      <td>3163614039</td>\n",
       "      <td>2254586615</td>\n",
       "      <td>2019-08-22</td>\n",
       "      <td>53904</td>\n",
       "      <td>A</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      transaction_id   visitorId       date  revenue group  un_group\n",
       "425   590470918       1920142716 2019-08-19  1294500   B   NaN      \n",
       "1196  3936777065      2108080724 2019-08-15  202740    B   NaN      \n",
       "1136  666610489       1307669133 2019-08-13  92550     A   NaN      \n",
       "744   3668308183      888512513  2019-08-27  86620     B   NaN      \n",
       "743   3603576309      4133034833 2019-08-09  67990     A   NaN      \n",
       "1103  1348774318      1164614297 2019-08-12  66350     A   NaN      \n",
       "1099  316924019       148427295  2019-08-12  65710     A   NaN      \n",
       "949   1347999392      887908475  2019-08-21  60450     A   NaN      \n",
       "940   2420050534      4003628586 2019-08-08  58550     B   NaN      \n",
       "131   3163614039      2254586615 2019-08-22  53904     A   NaN      "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(orders.sort_values(by='revenue', ascending=False).head(10))\n",
    "\n",
    "plt.hist(orders['revenue']) \n",
    "plt.title('Гистограмма распределения стоимостей заказов')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXQAAAEICAYAAABPgw/pAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8QVMy6AAAACXBIWXMAAAsTAAALEwEAmpwYAAAea0lEQVR4nO3de5xcZZ3n8c83nYABhABpWQiBoMQoohjsRZSZFa9cVoHZFYeIggryml1RR5k4QVluMopmvIw7oCIiIyJX2RhDNCrguophaAy3gNGWW9LgpAmEW6IJ4bd/nKfC6UpVV1Wnuqv74ft+vfJKn3Oec85zLvWt5zynqo4iAjMzG/8mdLoCZmbWHg50M7NMONDNzDLhQDczy4QD3cwsEw50M7NMONBtM0nbSTpF0iRJb5T0xk7XyUaXpP0kHSmpS9JxkvbodJ2seQ70Fkl6uvTvOUnrS8PHd7p+WyMi1gGHAP8BfANY08n6SDpb0vc6WYcXoAHgDOBR4ATgsc5Wx1oxsdMVGG8iYofK35IeAE6OiJ93rkbtFREndroO1jkRMQD4ymyccgu9zSRtK+mrkh5O/74qads0bVCLs8bwwZJulrRW0h2SDi1NC0n71hqWdKmk80rT9pUUpeFfSDq5Rl3Pk3Rp+ntGWubENHxQGj6ver40/QOSNlVdsbyzVLePSbpP0qOS5kuakKa9TNKNktakaZdLmlJa7tslPSjpLuDlwK6S/q+k1ZI+VipXvc2Lq+q/eZvTOldKOqrOtnRJ+rSkP0p6StJtkqZL+lHarmfSsivb+Y003yvTetZKWl5efpP12yDpJaUyV1cd150kfVfSQNonZ1T2Y5r+YUn3pjrfI+lASf9aqmekuj8t6celZX5b0iOS+tM50FU6pr8qLf9TaRlvq7PfvpiO4VOSlkravzTtGkl/kvSEpF9KelWtfSNp11T3/5GGd5a0KG3z4+nvPUvzXp7GPyHp55KmVe2PPkmPSVqoUndR1b74o6Rja23TeOdAb7/PAAcDrwUOAA6iuIQFeI46+zydmNcD5wG7AP8A/EBSdyoS9eYdIfOB/gZlfhMRO5T+LSpN+xugBzgQOBr4UBov4PPAHsArgenA2QCSJgOXAx8D3gLsT7EfTwHeBJwt6TXVlZD0ZmCL8Wna7sAS4NMRsbDOdnwSmAMcCeyY6rouIt6VrsgqYTQlbeffSZoE/Aj4KfAS4KPA5ZJmtVC/PwInpjJTKd7Ayv43sBPw0rT9JwAfTOWPpdhvJ6Q6HwWsiYhTK8cjLeOANHxEGr4UeBbYF5gNvAOo9Wa/C8VxWFuj3hXfBvYCpgA3AueUpv0YmEmxb35LcVyr17FDKvf9iPh6Gj0B+A6wd1r2euBfS7N9DtgtLbef4tgh6S0U59V7gN2BB4Erq1Z5QNov5wJfJ0MdDXRJl6SW191Nln9PejdfLun7I12/YToeODciVqfL13OA96dpDwH/WaUWacn7gMURsTginouInwG9FCFTmfftI1v1goqWtoCt6Ur6QkQ8FhEPAV+lCEwioi8ifhYRf0n758sUYQXFG+HTEfHDNO064IaIWBER9wILgf9WVVcBXwTOrFGHnSnC/PKIuGyIup4MnJHWExFxR0Q0un9wMLADcH5EbIiIG4FFle1ssn7f5flz4wTgstJ8XcBxwOkR8VREPAB8qVT+ZOCLEXFrqnNfRDw4VIUl7UZxPv19RDwTEauBr6T1VPs0cAnwRL3lpf21juJcgSK4K9MuSfX+C8UbzwGSdirNvi2wALg3Is4rzbcmIn4QEesi4ingn3j+/CAilkfEhtI6l6X/jwcuiYjfpnWeDrxB0owaVZ9Ih+8PjZROt9AvBQ5vpqCkmRQH6ZCIeBXw9yNXra2yB0XroOLBNA6KFsMdwP2S1gLzSuX2Bo5Nl+9r0/S/omhtAJwKnJYuNdfWWO8/lOb7bY3pX0vTH0lvpC+qU/8uipbOpxpsZyMrS39v3geSdpN0ZbrcfxL4HjA1lduN4qZcPauB/1Q17j0UN/BurFH+HOBp4C0pWOuZTtFabsUewMqIeK407kFgWlW5oeo3APxe0l9TBPV3S9OmApPY8lyqLH84dd47LfOR0rnyTYrW7maS9k71nt9ogZIuBJ4B3gvclMZ1STo/dW08CTxQ2qaKjwDbA29MV2aV5W0n6ZsqupieBH4JTKl0C6Uyi4CnKK4wbkujB73uIuJpitAuH4/fSnoauICilZ6djgZ6RPySqrvoKvo7f6KiH/P/SXpFmvRh4IKIeDzNu3qUq9ushyleOBV7pXFExJ8j4t0RsXNETAHOL5VbCVwWEVNK/7aPiPPTvIsi4qURsVOat9o/V+aj6Oao9rE07VXA64AP1Kn/icCKiFja5PbWM7309+Z9QHHJHMCrI2JHiiuTStgOMPhFX+0lFJ/AqZgEfBb4xzrlr6Z4UxRFl0g9K4GXDTG9loeB6Sr1aVNsZ7mbqlH9AC6m6FrpS1clFY8CG9nyXKosfzh1Xgn8BZhaOsd2TA2kss9StP6farTAiPifwHYU4f9/0uj3UnSzvY2iy2hGGl9+U70Z+GvgVopWeMVpwCzg9en8+C/V80bEOyneDK6naBRC1etO0vbArgw+HgemLpfZwIWS9mq0feNNp1votVwEfDQiXkfRj3xhGv9y4OWSfp1uwDTVsu+AK4AzJHWnftEzKVqhjXwPeJekw1IL50WSDi3fEGqTdRQv6nrH/jMUV0Jba266wTUd+DhwVRr/YopW8xPpvsHc0jxLKVpj70r3Dv4GeKukWalv+iiKfuuK9wM3R8Sdderwq9SC/hBwpqSX1il3MfBZSTNVeI2kXRts3y0U+/JTKj63fyjwLgb32zaqHxR98L+l6PrYLCI2Ubwh/ZOkF6dW8yd5/ly6mOKq7HWpzvumMnVFxCNpfV+StKOkCakB9aZSsX2B11O03Ickaf/0hiaKLpT1adKLKc6xNRRh/7kasy+NiGcp+unnSHpDad71wNrUj39WaX0TJL0qXW1NqFrnFcAHJb1WxYcQPgfckrqqqm2ieLOd0mgbx5sxFejpJskbgWsk3U5xUlW6HCZS3GQ5lKKf8lt1+qI77TyKvu87gbsoXqw1PylSFhErKVo1n6Zoqa6kCLt2HaMvSloF3Af0Udx4qmVRRPyhDev7IcXl8O0ULalvp/HnUFxBPJHGX1eZISKeoehLvpCii+LuNP+3gF8Dn4+I3tI6dgb+V6OKRMTvKa6GLq7T9fJlivD8KfBkquvkGuXKy9xAEeBHULSmLwROiIjftVK/dL/kQxFxc43JH6XozrgP+BXwfYp+bSLiGoqW7fcpuh8WUNxMb+QEYBvgHuBx4Fqef41B0e11RkRsbGJZn0/LWAO8m+fvH3yXovujP62n7tVeRDxKsZ2XpCD+KsW+fzTN95NS8S7g3yjOnT8Brwb+Li3n5xT7+gfAIxRXL9X3Bu5IXS6/oDiXhnqjHZcUHX7ARbppsSgi9pe0I8Xl/u41yn2D4h33O2n4BmBeRNw6qhW2hlR8ZHJmRPRt5XLOBvaNiPe1pWJmmRtTLfSIeJLihuGxUHxCQNIBafICitZ5+SNe93WgmmZmY1KnP7Z4BfAbYJakVZJOovj40UmS7gCWU3RDQPHxszWS7qG4mz63iY+WmZm9YHS8y8XMzNpjTHW5mJnZ8HXsx7mmTp0aM2bM6NTqzczGpdtuu+3RiOiuNa1jgT5jxgx6e3sbFzQzs80k1f2JB3e5mJllwoFuZpYJB7qZWSYc6GZmmXCgm5llws8UtRG3YFk/85es4OG169ljymTmHjaLY2ZX/2y4mW0tB7qNqAXL+jn9urtYv3ETAP1r13P6dXcBONTN2sxdLjai5i9ZsTnMK9Zv3MT8JSs6VCOzfDnQbUQ9vHZ9S+PNbPgc6Dai9phS+zkR9cab2fA50G1EzT1sFpMndQ0aN3lSF3MPm9WhGpnlyzdFbURVbnz6Uy5mI8+BbiPumNnTHOBmo8BdLmZmmXCgm5llwoFuZpYJB7qZWSYc6GZmmXCgm5llwoFuZpaJhoEu6RJJqyXdXWf68ZLulHSXpJslHdD+apqZWSPNtNAvBQ4fYvr9wJsi4tXAZ4GL2lAvMzNrUcNvikbELyXNGGL6zaXBpcCebaiXmZm1qN196CcBP643UdIpknol9Q4MDLR51WZmL2xtC3RJb6YI9H+sVyYiLoqInojo6e7ubteqzcyMNv04l6TXABcDR0TEmnYs08zMWrPVLXRJewHXAe+PiN9vfZXMzGw4GrbQJV0BHApMlbQKOAuYBBAR3wDOBHYFLpQE8GxE9IxUhc3MrLZmPuUyp8H0k4GT21YjMzMbFn9T1MwsEw50M7NMONDNzDLhQDczy4QD3cwsEw50M7NMONDNzDLhQDczy4QD3cwsEw50M7NMONDNzDLhQDczy4QD3cwsEw50M7NMONDNzDLhQDczy4QD3cwsEw50M7NMONDNzDLhQDczy4QD3cwsEw0DXdIlklZLurvOdEn6mqQ+SXdKOrD91TQzs0aaaaFfChw+xPQjgJnp3ynA17e+WmZm1qqGgR4RvwQeG6LI0cB3o7AUmCJp93ZV0MzMmtOOPvRpwMrS8Ko0bguSTpHUK6l3YGCgDas2M7OKUb0pGhEXRURPRPR0d3eP5qrNzLLXjkDvB6aXhvdM48zMbBS1I9AXAiekT7scDDwREY+0YblmZtaCiY0KSLoCOBSYKmkVcBYwCSAivgEsBo4E+oB1wAdHqrJmZlZfw0CPiDkNpgfwkbbVyMzMhsXfFDUzy4QD3cwsEw50M7NMONDNzDLhQDczy4QD3cwsEw50M7NMONDNzDLhQDczy4QD3cwsEw50M7NMONDNzDLhQDczy4QD3cwsEw50M7NMONDNzDLhQDczy4QD3cwsEw50M7NMONDNzDLhQDczy4QD3cwsE00FuqTDJa2Q1CdpXo3pe0m6SdIySXdKOrL9VTUzs6E0DHRJXcAFwBHAfsAcSftVFTsDuDoiZgPHARe2u6JmZja0ZlroBwF9EXFfRGwArgSOrioTwI7p752Ah9tXRTMza0YzgT4NWFkaXpXGlZ0NvE/SKmAx8NFaC5J0iqReSb0DAwPDqK6ZmdXTrpuic4BLI2JP4EjgMklbLDsiLoqInojo6e7ubtOqzcwMmgv0fmB6aXjPNK7sJOBqgIj4DfAiYGo7KmhmZs1pJtBvBWZK2kfSNhQ3PRdWlXkIeCuApFdSBLr7VMzMRlHDQI+IZ4FTgSXAvRSfZlku6VxJR6VipwEflnQHcAXwgYiIkaq0mZltaWIzhSJiMcXNzvK4M0t/3wMc0t6qmZlZK/xNUTOzTDjQzcwy4UA3M8uEA93MLBMOdDOzTDjQzcwy4UA3M8uEA93MLBMOdDOzTDjQzcwy4UA3M8uEA93MLBMOdDOzTDjQzcwy4UA3M8uEA93MLBMOdDOzTDjQzcwy4UA3M8uEA93MLBMOdDOzTDQV6JIOl7RCUp+keXXKvEfSPZKWS/p+e6tpZmaNTGxUQFIXcAHwdmAVcKukhRFxT6nMTOB04JCIeFzSS0aqwmZmVlszLfSDgL6IuC8iNgBXAkdXlfkwcEFEPA4QEavbW00zM2ukmUCfBqwsDa9K48peDrxc0q8lLZV0eK0FSTpFUq+k3oGBgeHV2MzMamrXTdGJwEzgUGAO8C1JU6oLRcRFEdETET3d3d1tWrWZmUFzgd4PTC8N75nGla0CFkbExoi4H/g9RcCbmdkoaSbQbwVmStpH0jbAccDCqjILKFrnSJpK0QVzX/uqaWZmjTQM9Ih4FjgVWALcC1wdEcslnSvpqFRsCbBG0j3ATcDciFgzUpU2M7MtKSI6suKenp7o7e3tyLrNzMYrSbdFRE+taf6mqJlZJhzoZmaZcKCbmWXCgW5mlgkHuplZJhzoZmaZcKCbmWXCgW5mlgkHuplZJhzoZmaZcKCbmWXCgW5mlgkHuplZJhzoZmaZcKCbmWXCgW5mlgkHuplZJhzoZmaZcKCbmWXCgW5mlgkHuplZJhzoZmaZaCrQJR0uaYWkPknzhij33yWFpJ72VdHMzJrRMNAldQEXAEcA+wFzJO1Xo9yLgY8Dt7S7kmZm1lgzLfSDgL6IuC8iNgBXAkfXKPdZ4AvAn9tYPzMza1IzgT4NWFkaXpXGbSbpQGB6RFw/1IIknSKpV1LvwMBAy5U1M7P6tvqmqKQJwJeB0xqVjYiLIqInInq6u7u3dtVmZlbSTKD3A9NLw3umcRUvBvYHfiHpAeBgYKFvjJqZja5mAv1WYKakfSRtAxwHLKxMjIgnImJqRMyIiBnAUuCoiOgdkRqbmVlNDQM9Ip4FTgWWAPcCV0fEcknnSjpqpCtoZmbNmdhMoYhYDCyuGndmnbKHbn21zMysVf6mqJlZJhzoZmaZcKCbmWXCgW5mlgkHuplZJhzoZmaZcKCbmWXCgW5mlgkHuplZJhzoZmaZcKCbmWXCgW5mlgkHuplZJhzoZmaZcKCbmWXCgW5mlgkHuplZJhzoZmaZcKCbmWXCgW5mlgkHuplZJpoKdEmHS1ohqU/SvBrTPynpHkl3SrpB0t7tr6qZ2fi2YFk/h5x/I/vMu55Dzr+RBcv627r8hoEuqQu4ADgC2A+YI2m/qmLLgJ6IeA1wLfDFttbSzGycW7Csn9Ovu4v+tesJoH/tek6/7q62hnozLfSDgL6IuC8iNgBXAkeXC0TETRGxLg0uBfZsWw3NzDIwf8kK1m/cNGjc+o2bmL9kRdvW0UygTwNWloZXpXH1nAT8uNYESadI6pXUOzAw0HwtzczGuYfXrm9p/HC09aaopPcBPcD8WtMj4qKI6ImInu7u7nau2sxsTNtjyuSWxg9HM4HeD0wvDe+Zxg0i6W3AZ4CjIuIv7amemVke5h42i8mTugaNmzypi7mHzWrbOiY2UeZWYKakfSiC/DjgveUCkmYD3wQOj4jVbaudmVkmjpld9FTPX7KCh9euZ48pk5l72KzN49uhYaBHxLOSTgWWAF3AJRGxXNK5QG9ELKToYtkBuEYSwEMRcVTbamlmloFjZk9ra4BXa6aFTkQsBhZXjTuz9Pfb2lwvMzNrkb8pamaWCQe6mVkmHOhmZplwoJuZZcKBbmaWCQe6mVkmHOhmZplwoJuZZaKpLxaZmdlgC5b1j+jX+IfDgW42xo3F4HihqzysovL75pWHVQAdPTbucjEbw0bjKTfWutF4WMVwONDNxrCxGhwvdKPxsIrhcJeL2Rg2VoMjVwuW9XP2wuWsXb8RgJ23m8RZ73rVFt0oe0yZTH+NY9DOh1UMhwPdbAybst0kHl+3seb48ah8P2CnyZOQYO26jWPi3sCCZf3MveYONj4Xm8c9vm4jc6+9AxjcNz73sFmD+tCh/Q+rGA4HeovG+g2qsV6/8aiT+zSi9vg/V3XDjAfVNxIrrWAY3k3Fdh+X+UtWDArzio2bgvlLVgxa9jGzp9H74GNcvvQhKnNM0LBX3TYO9BaM1TvbFWO9fiNtJIK32X3azLprlYGhn2DzxPotW+cA6zc+x+xzf1qzO2CsqnU/oKxyb6CZ7RmJc32obqzqaQuW9XPVv6+kHP/PbNhUszU/ml7Qgd5qAAx1g6rWfKPdsmu1fiNd19Hc/pF6M2tmnzaz7lpl5l5zB6hoAdabr15fLRTdAaPxht2u49hMv3+z9wa25lyvZcGyfiZIbKpzSVTdN95Ka340vSADvfrGB6QXWIN311ZuULWzZddoWyrz17k6b/giGYkwrLXMT1x1O70PPsZ5x7y6qflb2S/n/Gh5zRf42QuXD1rOjF0ns/S+xwe9cKcNsfxmjnm9cDnt6ufPp1plagVCdZ13mjx0X/nWhFgzhjo3oPHzMWu91obS7E3Fdt4srmxjvTCf1KUt+sZbac2PpqwCvdnL3uqbGRUbNwWfvPp2PnHV7TXnr9daqvWia1fLrtH21tuWsgkSC5b1113mSLR2Trv6ji1eIAFcvvQhevbeZcg3tTe/opsf3Nbf9H5ZsKy/5o1DKPppK2HSv3Z9zeM31PLrHfMAZsy7nmlDtKA3RWxebisv8nKdmwnCeutvh3rnxunX3cmfNz63uRFRvQ9bDfKK/rXrOeT8Gxu+gQ/1KZN2XHlXVD7lAnDI+TcOuplb7/5G9ZvSaF6pKurVaoT19PREb29vW5ZV7+QR8MaX7cIDa9Zv3pnrNjxb98Vfz7RSf2f1XXAo3sHnv/uAzSfy/CUrhnyRCYasS5fEl95zQMODfsj5Nzb9YhZw/MF71Wwd7zPv+pqtewFf+dvXDrk9EwTPRbGP3vyKbhbd8UjDF3GXxJzXT+em3w3Qv3Y9grpXF9Wm1eh7HupSuRW19nuzb5pDGerF3w6V49TKld8ZC+7iiltWsili8/EonxvNnMeN6rQ1mzzU+Qr1j8s2XWLDpsFrLudA/9r1dKXzpXIufeKq2+ue//ef/19bOgfKWTBUPet9HLIZkm6LiJ6a08ZboG/tiTZckyaISV1i3cbnak7f2hN4NJZZeZHc9LuBQS/0c360vOYby+RJEwa1wl4IGh3nsar6TbJaOWjOWHAX31v6UAdqOXyVAOx98LHNb0TtUmmUVBP1PzZaS+X1Wmnc1DsWFZMmiPnHNm64bbGeXAK9Ha0lM7OxYsrkSdx+1jtammeoQG/qq/+SDpe0QlKfpHk1pm8r6ao0/RZJM1qqYZNq3fgyMxuvWr3H0EjDQJfUBVwAHAHsB8yRtF9VsZOAxyNiX+ArwBfaWkuGvvFlZmbNtdAPAvoi4r6I2ABcCRxdVeZo4N/S39cCb5XU1u9N+ceIzMyG1kygTwNWloZXpXE1y0TEs8ATwK7VC5J0iqReSb0DAwMtVdQ/RmRmuWn3rwWM6s/nRsRFEdETET3d3d0tzdvpXzEzM2u34w/eq63LaybQ+4HppeE907iaZSRNBHYC1rSjghVzD5vlH283s2zMfMn2TX1ruhXNZOStwExJ+0jaBjgOWFhVZiFwYvr73cCN0ebPQx4zexpf/tvXMnlS52N9u0kT/OZiQPGinNLg6/lW2zZdekG+jiYI3nfwXvzsk4e2fdkNv/ofEc9KOhVYAnQBl0TEcknnAr0RsRD4NnCZpD7gMYrQb7tjZk8bN78sZ2Y22pr6LZeIWAwsrhp3ZunvPwPHtrdqZmbWihfiFY+ZWZYc6GZmmXCgm5llwoFuZpaJjv3aoqQB4MFhzj4VeLSN1RnrvL158/bmrd3bu3dE1PxmZscCfWtI6q3385E58vbmzdubt9HcXne5mJllwoFuZpaJ8RroF3W6AqPM25s3b2/eRm17x2UfupmZbWm8ttDNzKyKA93MLBPjLtAbPbB6PJI0XdJNku6RtFzSx9P4XST9TNIf0v87p/GS9LW0D+6UdGBnt6B1krokLZO0KA3vkx4w3pceOL5NGj8qDyAfaZKmSLpW0u8k3SvpDZkf30+kc/luSVdIelFOx1jSJZJWS7q7NK7l4ynpxFT+D5JOrLWuVoyrQG/ygdXj0bPAaRGxH3Aw8JG0XfOAGyJiJnBDGoZi+2emf6cAXx/9Km+1jwP3loa/AHwlPWj8cYoHj8MoPIB8lPwL8JOIeAVwAMW2Z3l8JU0DPgb0RMT+FD+7fRx5HeNLgcOrxrV0PCXtApwFvJ7i2c1nVd4Ehi0ixs0/4A3AktLw6cDpna7XCGznD4G3AyuA3dO43YEV6e9vAnNK5TeXGw//KJ56dQPwFmARxaMVHwUmVh9nit/hf0P6e2Iqp05vQ4vbuxNwf3W9Mz6+lWcM75KO2SLgsNyOMTADuHu4xxOYA3yzNH5QueH8G1ctdJp7YPW4li43ZwO3ALtFxCNp0p+A3dLf430/fBX4FPBcGt4VWBvFA8Zh8PY09QDyMW4fYAD4TupmuljS9mR6fCOiH/hn4CHgEYpjdht5H2No/Xi2/TiPt0DPmqQdgB8Afx8RT5anRfEWPu4/YyrpncDqiLit03UZRROBA4GvR8Rs4BmevxwH8jm+AKnb4GiKN7I9gO3Zsnsia506nuMt0Jt5YPW4JGkSRZhfHhHXpdH/IWn3NH13YHUaP573wyHAUZIeAK6k6Hb5F2BKesA4DN6eEX8A+ShYBayKiFvS8LUUAZ/j8QV4G3B/RAxExEbgOorjnvMxhtaPZ9uP83gL9GYeWD3uSBLFc1nvjYgvlyaVH759IkXfemX8Cenu+cHAE6VLvTEtIk6PiD0jYgbF8bsxIo4HbqJ4wDhsua0j+gDykRYRfwJWSpqVRr0VuIcMj2/yEHCwpO3SuV3Z3myPcdLq8VwCvEPSzumq5h1p3PB1+sbCMG5EHAn8Hvgj8JlO16dN2/RXFJdndwK3p39HUvQj3gD8Afg5sEsqL4pP+/wRuIvi0wQd345hbPehwKL090uBfwf6gGuAbdP4F6XhvjT9pZ2u9zC39bVAbzrGC4Cdcz6+wDnA74C7gcuAbXM6xsAVFPcHNlJcgZ00nOMJfChtdx/wwa2tl7/6b2aWifHW5WJmZnU40M3MMuFANzPLhAPdzCwTDnQzs0w40M3MMuFANzPLxP8HLiC/Nh7+NaEAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#попробуем другим способом\n",
    "x_values = pd.Series(range(0,len(orders['revenue'])))\n",
    "plt.scatter(x_values, orders['revenue']) \n",
    "plt.title('Точечный график стоимостей заказов')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Заказ в интерне-магазине свыше 1 млн выглядит аномально. есть выбросы в районе 500 и 1200"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Построим более наглядный график, для это уберем явные выбросы с 'revenue' большим 199000"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "norm_orders = orders[orders['revenue']<=195000]['revenue']\n",
    "xn_values = pd.Series(range(0,len(norm_orders)))\n",
    "plt.figure(figsize=(10,5))\n",
    "plt.grid()\n",
    "plt.title('График стоимостей заказов')\n",
    "plt.scatter(xn_values, norm_orders, alpha=0.5);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Большинство примерно не больше 20 тысяч. Чтобы найти более точную границу аномальных заказов рассчитаем процентили."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 95-й и 99-й перцентили стоимости заказов"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([26785., 53904.])"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.percentile(orders['revenue'], [95, 99])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "У 5% чек заказа дороже 26785, 1% дороже 53904. Так как 99% заказов меньше суммы 53 тысяч , установим её в качестве границы для аномалий"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Статистическая значимость различий в конверсии между группами по «сырым» данным"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Соберем все данные по заказам и визитам (а также добавим кумулятивные показатели) в одну таблицу. Для этого создадим несколько таблиц и затем объединим их:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>group</th>\n",
       "      <th>visitors</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2019-08-01</td>\n",
       "      <td>A</td>\n",
       "      <td>719</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2019-08-02</td>\n",
       "      <td>A</td>\n",
       "      <td>619</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2019-08-03</td>\n",
       "      <td>A</td>\n",
       "      <td>507</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2019-08-04</td>\n",
       "      <td>A</td>\n",
       "      <td>717</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2019-08-05</td>\n",
       "      <td>A</td>\n",
       "      <td>756</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        date group  visitors\n",
       "0 2019-08-01   A    719     \n",
       "1 2019-08-02   A    619     \n",
       "2 2019-08-03   A    507     \n",
       "3 2019-08-04   A    717     \n",
       "4 2019-08-05   A    756     "
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "visits.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>transaction_id</th>\n",
       "      <th>visitorId</th>\n",
       "      <th>date</th>\n",
       "      <th>revenue</th>\n",
       "      <th>group</th>\n",
       "      <th>un_group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3667963787</td>\n",
       "      <td>3312258926</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>1650</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2804400009</td>\n",
       "      <td>3642806036</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>730</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3797467345</td>\n",
       "      <td>1196621759</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>9759</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2282983706</td>\n",
       "      <td>2322279887</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>2308</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>182168103</td>\n",
       "      <td>935554773</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>2210</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   transaction_id   visitorId       date  revenue group  un_group\n",
       "0  3667963787      3312258926 2019-08-15  1650      B   NaN      \n",
       "1  2804400009      3642806036 2019-08-15  730       B   NaN      \n",
       "3  3797467345      1196621759 2019-08-15  9759      B   NaN      \n",
       "4  2282983706      2322279887 2019-08-15  2308      B   NaN      \n",
       "5  182168103       935554773  2019-08-15  2210      B   NaN      "
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "orders.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "#получим агрегированные кумулятивные по дням данные о посетителях интернет-магазина\n",
    "visitorsADaily = visits[visits['group']=='A'][['date', 'visitors']]\n",
    "visitorsADaily.columns = ['date', 'visitorsPerDateA']\n",
    "\n",
    "visitorsACummulative = visitorsADaily.apply(lambda x: visitorsADaily[visitorsADaily['date'] <= x['date']]. \\\n",
    "                                            agg({'date' : 'max', 'visitorsPerDateA' : 'sum'}), axis=1)\n",
    "visitorsACummulative.columns = ['date', 'visitorsCummulativeA']\n",
    "\n",
    "visitorsBDaily = visits[visits['group']=='B'][['date', 'visitors']]\n",
    "visitorsBDaily.columns = ['date', 'visitorsPerDateB']\n",
    "\n",
    "visitorsBCummulative = visitorsBDaily.apply(lambda x: visitorsBDaily[visitorsBDaily['date'] <= x['date']]. \\\n",
    "                                            agg({'date' : 'max', 'visitorsPerDateB' : 'sum'}), axis=1)\n",
    "visitorsBCummulative.columns = ['date', 'visitorsCummulativeB']\n",
    "\n",
    "\n",
    "ordersADaily = orders[orders['group']=='A'][['date', 'transaction_id', 'visitorId', 'revenue']]\\\n",
    "    .groupby('date', as_index=False)\\\n",
    "    .agg({'transaction_id' : pd.Series.nunique, 'revenue' : 'sum'})\n",
    "ordersADaily.columns = ['date', 'ordersPerDateA', 'revenuePerDateA']\n",
    "\n",
    "ordersACummulative = ordersADaily.apply(\n",
    "    lambda x: \\\n",
    "        ordersADaily[ordersADaily['date'] <= x['date']]\\\n",
    "            .agg({\n",
    "                'date' : 'max',\n",
    "                'ordersPerDateA' : 'sum',\n",
    "                'revenuePerDateA' : 'sum'}), axis=1).sort_values(by=['date'])\n",
    "ordersACummulative.columns = ['date', 'ordersCummulativeA', 'revenueCummulativeA']\n",
    "\n",
    "ordersBDaily = orders[orders['group']=='B'][['date', 'transaction_id', 'visitorId', 'revenue']]\\\n",
    "    .groupby('date', as_index=False)\\\n",
    "    .agg({'transaction_id' : pd.Series.nunique, 'revenue' : 'sum'})\n",
    "ordersBDaily.columns = ['date', 'ordersPerDateB', 'revenuePerDateB']\n",
    "\n",
    "ordersBCummulative = ordersBDaily.apply(\n",
    "    lambda x: \\\n",
    "        ordersBDaily[ordersBDaily['date'] <= x['date']]\\\n",
    "            .agg({\n",
    "                'date' : 'max',\n",
    "                'ordersPerDateB' : 'sum',\n",
    "                'revenuePerDateB' : 'sum'}), axis=1).sort_values(by=['date'])\n",
    "ordersBCummulative.columns = ['date', 'ordersCummulativeB', 'revenueCummulativeB']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>ordersPerDateA</th>\n",
       "      <th>revenuePerDateA</th>\n",
       "      <th>ordersPerDateB</th>\n",
       "      <th>revenuePerDateB</th>\n",
       "      <th>ordersCummulativeA</th>\n",
       "      <th>revenueCummulativeA</th>\n",
       "      <th>ordersCummulativeB</th>\n",
       "      <th>revenueCummulativeB</th>\n",
       "      <th>visitorsPerDateA</th>\n",
       "      <th>visitorsPerDateB</th>\n",
       "      <th>visitorsCummulativeA</th>\n",
       "      <th>visitorsCummulativeB</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2019-08-02</td>\n",
       "      <td>19</td>\n",
       "      <td>91602</td>\n",
       "      <td>23</td>\n",
       "      <td>162043</td>\n",
       "      <td>42</td>\n",
       "      <td>234381</td>\n",
       "      <td>40</td>\n",
       "      <td>221801</td>\n",
       "      <td>619</td>\n",
       "      <td>581</td>\n",
       "      <td>1338</td>\n",
       "      <td>1294</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2019-08-05</td>\n",
       "      <td>22</td>\n",
       "      <td>86383</td>\n",
       "      <td>21</td>\n",
       "      <td>89908</td>\n",
       "      <td>99</td>\n",
       "      <td>474413</td>\n",
       "      <td>89</td>\n",
       "      <td>475648</td>\n",
       "      <td>756</td>\n",
       "      <td>707</td>\n",
       "      <td>3318</td>\n",
       "      <td>3280</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>2019-08-27</td>\n",
       "      <td>23</td>\n",
       "      <td>185350</td>\n",
       "      <td>11</td>\n",
       "      <td>111347</td>\n",
       "      <td>419</td>\n",
       "      <td>2940471</td>\n",
       "      <td>473</td>\n",
       "      <td>4579312</td>\n",
       "      <td>711</td>\n",
       "      <td>720</td>\n",
       "      <td>16376</td>\n",
       "      <td>16523</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         date  ordersPerDateA  revenuePerDateA  ordersPerDateB  \\\n",
       "1  2019-08-02  19              91602            23               \n",
       "4  2019-08-05  22              86383            21               \n",
       "26 2019-08-27  23              185350           11               \n",
       "\n",
       "    revenuePerDateB  ordersCummulativeA  revenueCummulativeA  \\\n",
       "1   162043           42                  234381                \n",
       "4   89908            99                  474413                \n",
       "26  111347           419                 2940471               \n",
       "\n",
       "    ordersCummulativeB  revenueCummulativeB  visitorsPerDateA  \\\n",
       "1   40                  221801               619                \n",
       "4   89                  475648               756                \n",
       "26  473                 4579312              711                \n",
       "\n",
       "    visitorsPerDateB  visitorsCummulativeA  visitorsCummulativeB  \n",
       "1   581               1338                  1294                  \n",
       "4   707               3318                  3280                  \n",
       "26  720               16376                 16523                 "
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#теперь все объеденим\n",
    "\n",
    "data = ordersADaily.merge(ordersBDaily, left_on='date', right_on='date', how='left')\\\n",
    "    .merge(ordersACummulative, left_on='date', right_on='date', how='left')\\\n",
    "    .merge(ordersBCummulative, left_on='date', right_on='date', how='left')\\\n",
    "    .merge(visitorsADaily, left_on='date', right_on='date', how='left')\\\n",
    "    .merge(visitorsBDaily, left_on='date', right_on='date', how='left')\\\n",
    "    .merge(visitorsACummulative, left_on='date', right_on='date', how='left')\\\n",
    "    .merge(visitorsBCummulative, left_on='date', right_on='date', how='left')\n",
    "data.sample(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Применим критерий и отформатируем p-value, округлив его до трёх знаков после запятой. \n",
    "\n",
    "В sampleA сохраним выборку, где каждый элемент — число заказов определённого пользователя, в том числе ноль. Значит, число элементов sampleA — это количество пользователей, сумма всех элементов — количество заказов. Чтобы получить конверсию в группе, поделим сумму заказов на число пользователей — найдём среднее в выборке sampleA методом mean(). Аналогично найдём конверсию группы B: SampleB.mean().\n",
    "Выведем относительный прирост конверсии группы B: конверсия группы B / конверсия группы A - 1. Округлим до трёх знаков после запятой (пороговое значение возьмём равное 5%).\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " **Гипотезы**:\n",
    "\n",
    "- Нулевая: \"статистически значимых различий в конверсии между группами нет\"; \n",
    "- Альтернативная - статистически значимые различия есть."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "alpha = 0.05\n",
      "p-value = 0.011\n",
      "Относительный показатель 'B' и 'A' = 0.160\n"
     ]
    }
   ],
   "source": [
    "ordersByUsersA = orders[orders['group']=='A'].groupby('visitorId', as_index=False).agg({'transaction_id' : pd.Series.nunique})\n",
    "ordersByUsersA.columns = ['userId', 'orders']\n",
    "\n",
    "ordersByUsersB = orders[orders['group']=='B'].groupby('visitorId', as_index=False).agg({'transaction_id' : pd.Series.nunique})\n",
    "ordersByUsersB.columns = ['userId', 'orders']\n",
    "\n",
    "sampleA = pd.concat([ordersByUsersA['orders'],pd.Series(0, index=np.arange(data['visitorsPerDateA'].sum() - len(ordersByUsersA['orders'])), name='orders')],axis=0)\n",
    "\n",
    "sampleB = pd.concat([ordersByUsersB['orders'],pd.Series(0, index=np.arange(data['visitorsPerDateB'].sum() - len(ordersByUsersB['orders'])), name='orders')],axis=0)\n",
    "\n",
    "print(\"alpha =\",0.05)\n",
    "print(\"p-value = {0:.3f}\".format(stats.mannwhitneyu(sampleA, sampleB, alternative = 'two-sided')[1]))\n",
    "print(\"Относительный показатель 'B' и 'A' = {0:.3f}\".format(sampleB.mean()/sampleA.mean()-1)) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- p-value = 0.011 и это меньше 0.05. Значит, нулевую гипотезу - отвергаем. Получается, что по «сырым» данным различия в конверсии групп A и B есть. А относительный прирост группы \"B\" над \"A\" равен 16% "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0    18291\n",
       " 1    427  \n",
       " 2    13   \n",
       " 3     5   \n",
       " Name: orders, dtype: int64,\n",
       " 0    18388\n",
       " 1    510  \n",
       " 2    16   \n",
       " 3     2   \n",
       " Name: orders, dtype: int64)"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# сколько посетители делают определенное кол-во заказов\n",
    "sampleA.value_counts() , sampleB.value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Статистическая значимость различий в среднем чеке заказа между группами по «сырым» данным"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Чтобы рассчитать статистическую значимость различий в среднем чеке между группами, передадим критерию mannwhitneyu() данные о выручке с заказов (пороговое значение возьмём равное 5%). И найдём относительные различия в среднем чеке между группами.\n",
    "\n",
    "**Гипотезы**:\n",
    "- Нулевая: \"статистически значимых различий в средних чеках между группами нет\"; \n",
    "- Альтернативная - статистически значимые различия есть."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'alpha = 0.05'"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "'p-value = 0.829'"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "\"Относительный показатель 'B' и 'A' = 0.287\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(\"alpha = 0.05\")\n",
    "display(\"p-value = {0:.3f}\".format(stats.mannwhitneyu(orders[orders['group']=='A']['revenue'], orders[orders['group']=='B']['revenue'], alternative = 'two-sided')[1]))\n",
    "display(\"Относительный показатель 'B' и 'A' = {0:.3f}\".format(orders[orders['group']=='B']['revenue'].mean()/orders[orders['group']=='A']['revenue'].mean()-1)) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "P-value значительно больше 0.05. Следовательно, нулевую гипотезу отвергать не будем. Средние чеки по \"сырым\" данным схожи. И при этом, средний чек группы B значительно выше среднего чека группы A почти на 29%. Но это не является статистически значимым "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Статистическая значимость различий в конверсии между группами по «очищенным» данным"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Мы приняли за аномальных пользователей тех, кто совершил более 1 заказа или сделал заказ дороже 58233.2 рублей. Сделаем срезы пользователей с числом заказов больше 1 — usersWithManyOrders и пользователей, совершивших заказы дороже 58233.2 — usersWithExpensiveOrders. Объединим их в таблице abnormalUsers. Чтобы узнать сколько всего аномальных пользователей, применим метод shape()."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1099    148427295\n",
       "33      249864742\n",
       "36      366673373\n",
       "58      611059232\n",
       "64      678354126\n",
       "dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Всего аномальных пользователей = 29\n"
     ]
    }
   ],
   "source": [
    "usersWithManyOrders = pd.concat([ordersByUsersA[ordersByUsersA['orders'] > 1]['userId'], ordersByUsersB[ordersByUsersB['orders'] > 2]['userId']], axis = 0)\n",
    "usersWithExpensiveOrders = orders[orders['revenue'] > 53904]['visitorId']\n",
    "abnormalUsers = pd.concat([usersWithManyOrders, usersWithExpensiveOrders], axis = 0).drop_duplicates().sort_values()\n",
    "display(abnormalUsers.head(5))\n",
    "print(\"Всего аномальных пользователей =\" ,len(abnormalUsers)) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Посчитаем статистическую значимость различий в конверсии между группами теста по очищенным данным. Сначала подготовим выборки количества заказов по пользователям по группам теста:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "sampleAFiltered = pd.concat([ordersByUsersA[np.logical_not(ordersByUsersA['userId'].isin(abnormalUsers))]['orders'], \\\n",
    "                             pd.Series(0, index=np.arange(data['visitorsPerDateA'].sum() - len(ordersByUsersA['orders'])), \\\n",
    "                                       name='orders')],axis=0)\n",
    "\n",
    "sampleBFiltered = pd.concat([ordersByUsersB[np.logical_not(ordersByUsersB['userId'].isin(abnormalUsers))]['orders'], \\\n",
    "                             pd.Series(0, index=np.arange(data['visitorsPerDateB'].sum() - len(ordersByUsersB['orders'])), \\\n",
    "                                       name='orders')],axis=0) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Воспользуемся статистическим критерием Манна-Уитни к полученным выборкам,\n",
    "\n",
    "**Гипотезы:**\n",
    " - Нулевая: \"статистически значимых различий в конверсии между группами нет\"; \n",
    " - Альтернативная  - статистически значимые различия есть."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "p-value = 0.002\n",
      "Относительный показатель 'B' и 'A' = 0.262\n"
     ]
    }
   ],
   "source": [
    "print(\"p-value = {0:.3f}\".format(stats.mannwhitneyu(sampleAFiltered, sampleBFiltered, alternative = 'two-sided')[1]))\n",
    "print(\"Относительный показатель 'B' и 'A' = {0:.3f}\".format(sampleBFiltered.mean()/sampleAFiltered.mean()-1)) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Какой вывод можно сделать. Р-value = 0.002 и это гораздо меньше 0.05. Значит, нулевую гипотезу отвергаем. Выходит, что по «очищенным» данным различия в конверсии групп A и B есть. А относительный прирост группы \"B\" над \"A\" равен 26%. что выше, чем с «сырыми» данными."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Статистическая значимость различий в среднем чеке заказа между группами по «очищенным» данным"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Гипотезы:**\n",
    "- Нулевая: \"статистически значимых различий в средних чеках между группами нет\"; \n",
    "- Альтернативная - статистически значимые различия есть."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "p-value = 0.986\n",
      "Относительный показатель 'B' и 'A' = -0.015\n"
     ]
    }
   ],
   "source": [
    "print(\"p-value = {0:.3f}\".format(stats.mannwhitneyu(\n",
    "    orders[np.logical_and(\n",
    "        orders['group']=='A',\n",
    "        np.logical_not(orders['visitorId'].isin(abnormalUsers)))]['revenue'],\n",
    "    orders[np.logical_and(\n",
    "        orders['group']=='B',\n",
    "        np.logical_not(orders['visitorId'].isin(abnormalUsers)))]['revenue'], alternative = 'two-sided')[1]))\n",
    "\n",
    "print(\"Относительный показатель 'B' и 'A' = {0:.3f}\".format(\n",
    "    orders[np.logical_and(orders['group']=='B',np.logical_not(orders['visitorId'].isin(abnormalUsers)))]['revenue'].mean()/\n",
    "    orders[np.logical_and(\n",
    "        orders['group']=='A',\n",
    "        np.logical_not(orders['visitorId'].isin(abnormalUsers)))]['revenue'].mean() - 1)) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "P-value равен 0,98 что больше 0.05. Поэтому отвергать нулевую гипотезу не будем. А вот средний чек группы B немного ниже, но это не является статистически значимым"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " ### Решение по результатам теста"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1. Мы выяснили, что и по \"сырым\" и по \"очищенным\" данным различия в конверсии групп A и B есть. Относительный выигрыш группы В над А по \"очищенным\" данным равен 26% и 16% по \"сырым\" данным.\n",
    "\n",
    "2. По \"сырым\" и по \"очищенным\" данным различия в средних чеках групп A и B нет. После того, как убрали аномальный заказ на 1,3млн чеки сравнялись. Это был выброс.\n",
    "\n",
    "3. Можно принять решение остановить тестирование и зафиксировать успех и победу группы B : группа B значительно лучше группы A по конверсии, хотя по среднему чеку группы примерно равны."
   ]
  }
 ],
 "metadata": {
  "ExecuteTimeLog": [
   {
    "duration": 53,
    "start_time": "2022-08-15T13:29:06.590Z"
   },
   {
    "duration": 878,
    "start_time": "2022-08-15T13:29:09.478Z"
   },
   {
    "duration": 209,
    "start_time": "2022-08-15T13:29:10.997Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-15T13:29:55.208Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-15T13:30:08.359Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-15T13:32:22.731Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-15T13:33:03.307Z"
   },
   {
    "duration": 3,
    "start_time": "2022-08-15T13:35:12.189Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-15T13:35:13.971Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-15T13:35:44.967Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-15T13:37:04.547Z"
   },
   {
    "duration": 56,
    "start_time": "2022-08-15T13:38:11.664Z"
   },
   {
    "duration": 16,
    "start_time": "2022-08-15T13:38:29.390Z"
   },
   {
    "duration": 560,
    "start_time": "2022-08-15T13:41:40.169Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-15T13:42:06.448Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-15T13:42:14.895Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-15T13:42:38.327Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-15T13:42:40.189Z"
   },
   {
    "duration": 79,
    "start_time": "2022-08-15T13:44:21.896Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-15T13:44:27.955Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-15T13:44:33.917Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-15T13:44:57.830Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-15T13:45:07.457Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-15T13:45:13.442Z"
   },
   {
    "duration": 21,
    "start_time": "2022-08-15T13:48:48.110Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-15T13:48:50.813Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-15T13:50:47.650Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-15T13:50:53.745Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-15T13:51:03.048Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-15T13:51:17.147Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-15T13:51:40.369Z"
   },
   {
    "duration": 2,
    "start_time": "2022-08-15T13:51:44.671Z"
   },
   {
    "duration": 98,
    "start_time": "2022-08-15T13:51:44.676Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-15T13:51:44.775Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-15T13:51:44.787Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-15T13:51:44.807Z"
   },
   {
    "duration": 16,
    "start_time": "2022-08-15T13:51:44.818Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-15T13:51:44.837Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-15T13:51:44.845Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-15T13:51:44.858Z"
   },
   {
    "duration": 32,
    "start_time": "2022-08-15T13:51:44.871Z"
   },
   {
    "duration": 3,
    "start_time": "2022-08-15T13:51:44.905Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-15T13:51:44.910Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-15T13:51:44.925Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-15T13:51:44.945Z"
   },
   {
    "duration": 21,
    "start_time": "2022-08-15T13:51:44.960Z"
   },
   {
    "duration": 38,
    "start_time": "2022-08-15T13:51:44.983Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-15T13:52:18.190Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-15T13:53:06.956Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-15T13:55:19.921Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-15T13:55:32.788Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-15T13:56:31.052Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-15T13:57:51.316Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-15T14:09:08.189Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-15T14:09:32.969Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-15T14:11:49.562Z"
   },
   {
    "duration": 324,
    "start_time": "2022-08-15T14:12:27.355Z"
   },
   {
    "duration": 3,
    "start_time": "2022-08-15T14:12:44.729Z"
   },
   {
    "duration": 225,
    "start_time": "2022-08-15T14:12:49.945Z"
   },
   {
    "duration": 3,
    "start_time": "2022-08-15T14:13:19.690Z"
   },
   {
    "duration": 242,
    "start_time": "2022-08-15T14:13:24.057Z"
   },
   {
    "duration": 3,
    "start_time": "2022-08-15T14:14:24.004Z"
   },
   {
    "duration": 100,
    "start_time": "2022-08-15T14:14:24.010Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-15T14:14:24.112Z"
   },
   {
    "duration": 22,
    "start_time": "2022-08-15T14:14:24.127Z"
   },
   {
    "duration": 18,
    "start_time": "2022-08-15T14:14:24.151Z"
   },
   {
    "duration": 46,
    "start_time": "2022-08-15T14:14:24.170Z"
   },
   {
    "duration": 31,
    "start_time": "2022-08-15T14:14:24.218Z"
   },
   {
    "duration": 21,
    "start_time": "2022-08-15T14:14:24.251Z"
   },
   {
    "duration": 33,
    "start_time": "2022-08-15T14:14:24.274Z"
   },
   {
    "duration": 45,
    "start_time": "2022-08-15T14:14:24.309Z"
   },
   {
    "duration": 571,
    "start_time": "2022-08-15T14:14:24.356Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-15T14:14:24.929Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-15T14:14:24.931Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-15T14:14:24.933Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-15T14:14:24.935Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-15T14:14:24.937Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-15T14:14:24.938Z"
   },
   {
    "duration": 279,
    "start_time": "2022-08-15T14:14:41.947Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-15T14:14:55.265Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-15T14:15:07.280Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-15T14:15:11.956Z"
   },
   {
    "duration": 93,
    "start_time": "2022-08-15T14:15:11.963Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-15T14:15:12.059Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-15T14:15:12.076Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-15T14:15:12.097Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-15T14:15:12.105Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-15T14:15:12.121Z"
   },
   {
    "duration": 20,
    "start_time": "2022-08-15T14:15:12.130Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-15T14:15:12.152Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-15T14:15:12.168Z"
   },
   {
    "duration": 19,
    "start_time": "2022-08-15T14:15:12.184Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-15T14:15:12.205Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-15T14:15:12.215Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-15T14:15:12.231Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-15T14:15:12.243Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-15T14:15:12.255Z"
   },
   {
    "duration": 34,
    "start_time": "2022-08-15T14:15:12.270Z"
   },
   {
    "duration": 206,
    "start_time": "2022-08-15T14:15:51.469Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-15T14:15:58.919Z"
   },
   {
    "duration": 88,
    "start_time": "2022-08-15T14:15:58.929Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-15T14:15:59.020Z"
   },
   {
    "duration": 29,
    "start_time": "2022-08-15T14:15:59.040Z"
   },
   {
    "duration": 24,
    "start_time": "2022-08-15T14:15:59.071Z"
   },
   {
    "duration": 26,
    "start_time": "2022-08-15T14:15:59.097Z"
   },
   {
    "duration": 31,
    "start_time": "2022-08-15T14:15:59.126Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-15T14:15:59.161Z"
   },
   {
    "duration": 22,
    "start_time": "2022-08-15T14:15:59.181Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-15T14:15:59.207Z"
   },
   {
    "duration": 29,
    "start_time": "2022-08-15T14:15:59.226Z"
   },
   {
    "duration": 22,
    "start_time": "2022-08-15T14:15:59.257Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-15T14:15:59.281Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-15T14:15:59.295Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-15T14:15:59.313Z"
   },
   {
    "duration": 20,
    "start_time": "2022-08-15T14:15:59.333Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-15T14:15:59.355Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-15T14:16:31.954Z"
   },
   {
    "duration": 28,
    "start_time": "2022-08-15T14:17:40.469Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-15T14:18:20.636Z"
   },
   {
    "duration": 207,
    "start_time": "2022-08-15T14:20:25.470Z"
   },
   {
    "duration": 226,
    "start_time": "2022-08-15T14:21:12.398Z"
   },
   {
    "duration": 236,
    "start_time": "2022-08-15T14:21:21.259Z"
   },
   {
    "duration": 19,
    "start_time": "2022-08-15T14:22:01.786Z"
   },
   {
    "duration": 138,
    "start_time": "2022-08-15T14:22:33.272Z"
   },
   {
    "duration": 157,
    "start_time": "2022-08-15T14:22:44.737Z"
   },
   {
    "duration": 16,
    "start_time": "2022-08-15T14:24:21.289Z"
   },
   {
    "duration": 278,
    "start_time": "2022-08-15T14:25:15.309Z"
   },
   {
    "duration": 188,
    "start_time": "2022-08-15T14:27:51.868Z"
   },
   {
    "duration": 342,
    "start_time": "2022-08-15T14:30:41.388Z"
   },
   {
    "duration": 306,
    "start_time": "2022-08-15T14:30:49.099Z"
   },
   {
    "duration": 317,
    "start_time": "2022-08-15T14:31:35.806Z"
   },
   {
    "duration": 305,
    "start_time": "2022-08-15T14:31:47.671Z"
   },
   {
    "duration": 307,
    "start_time": "2022-08-15T14:32:14.696Z"
   },
   {
    "duration": 276,
    "start_time": "2022-08-15T14:32:34.328Z"
   },
   {
    "duration": 203,
    "start_time": "2022-08-15T14:32:57.672Z"
   },
   {
    "duration": 187,
    "start_time": "2022-08-15T14:33:04.651Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-15T14:44:43.624Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-15T14:45:53.068Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-15T14:46:06.230Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-15T14:46:20.101Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-15T14:46:25.741Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-15T14:46:46.811Z"
   },
   {
    "duration": 224,
    "start_time": "2022-08-15T14:47:36.668Z"
   },
   {
    "duration": 218,
    "start_time": "2022-08-15T14:48:24.132Z"
   },
   {
    "duration": 226,
    "start_time": "2022-08-15T14:48:56.581Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-15T14:51:23.406Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-15T14:51:30.956Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-15T14:51:42.079Z"
   },
   {
    "duration": 207,
    "start_time": "2022-08-15T14:51:57.151Z"
   },
   {
    "duration": 240,
    "start_time": "2022-08-15T14:52:21.299Z"
   },
   {
    "duration": 316,
    "start_time": "2022-08-15T15:17:07.561Z"
   },
   {
    "duration": 281,
    "start_time": "2022-08-15T15:19:36.638Z"
   },
   {
    "duration": 319,
    "start_time": "2022-08-15T15:20:05.008Z"
   },
   {
    "duration": 20,
    "start_time": "2022-08-15T15:26:14.525Z"
   },
   {
    "duration": 19,
    "start_time": "2022-08-15T15:26:30.279Z"
   },
   {
    "duration": 1124,
    "start_time": "2022-08-15T15:26:47.090Z"
   },
   {
    "duration": 23,
    "start_time": "2022-08-15T15:26:52.271Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-15T15:27:23.698Z"
   },
   {
    "duration": 446,
    "start_time": "2022-08-15T15:27:41.292Z"
   },
   {
    "duration": 331,
    "start_time": "2022-08-15T15:27:52.444Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-15T15:32:24.155Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-15T15:33:25.238Z"
   },
   {
    "duration": 130,
    "start_time": "2022-08-15T15:34:03.473Z"
   },
   {
    "duration": 127,
    "start_time": "2022-08-15T15:34:24.313Z"
   },
   {
    "duration": 141,
    "start_time": "2022-08-15T15:34:55.321Z"
   },
   {
    "duration": 152,
    "start_time": "2022-08-15T15:35:04.503Z"
   },
   {
    "duration": 145,
    "start_time": "2022-08-15T15:36:12.881Z"
   },
   {
    "duration": 143,
    "start_time": "2022-08-15T15:36:39.790Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-15T15:38:56.700Z"
   },
   {
    "duration": 145,
    "start_time": "2022-08-15T15:41:29.324Z"
   },
   {
    "duration": 184,
    "start_time": "2022-08-15T15:41:47.242Z"
   },
   {
    "duration": 162,
    "start_time": "2022-08-15T15:42:07.665Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-15T15:44:01.316Z"
   },
   {
    "duration": 151,
    "start_time": "2022-08-15T15:44:06.084Z"
   },
   {
    "duration": 164,
    "start_time": "2022-08-15T15:44:16.704Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-15T15:45:05.020Z"
   },
   {
    "duration": 260,
    "start_time": "2022-08-15T15:45:10.374Z"
   },
   {
    "duration": 140,
    "start_time": "2022-08-15T15:45:45.619Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-15T15:49:51.971Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-15T15:49:58.333Z"
   },
   {
    "duration": 18,
    "start_time": "2022-08-15T16:00:09.592Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-15T16:00:15.971Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-15T16:00:29.256Z"
   },
   {
    "duration": 18,
    "start_time": "2022-08-15T16:02:59.003Z"
   },
   {
    "duration": 16,
    "start_time": "2022-08-15T16:03:12.058Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-15T16:03:17.723Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-15T16:05:15.844Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-15T16:08:21.643Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-15T16:08:34.183Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-15T16:08:57.664Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-15T16:09:00.764Z"
   },
   {
    "duration": 3,
    "start_time": "2022-08-15T16:10:43.268Z"
   },
   {
    "duration": 193,
    "start_time": "2022-08-15T16:15:22.452Z"
   },
   {
    "duration": 165,
    "start_time": "2022-08-15T16:15:33.370Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-15T16:19:04.122Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-15T16:19:11.925Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-15T16:19:24.681Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-15T16:19:37.745Z"
   },
   {
    "duration": 60,
    "start_time": "2022-08-15T16:19:53.583Z"
   },
   {
    "duration": 107,
    "start_time": "2022-08-15T16:20:08.251Z"
   },
   {
    "duration": 110,
    "start_time": "2022-08-15T16:21:15.651Z"
   },
   {
    "duration": 242,
    "start_time": "2022-08-15T16:21:36.496Z"
   },
   {
    "duration": 34,
    "start_time": "2022-08-15T16:22:00.254Z"
   },
   {
    "duration": 24,
    "start_time": "2022-08-15T16:22:50.149Z"
   },
   {
    "duration": 312,
    "start_time": "2022-08-15T16:23:05.552Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-15T16:26:54.244Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-15T16:29:37.765Z"
   },
   {
    "duration": 60,
    "start_time": "2022-08-15T16:30:19.511Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-15T16:30:28.620Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-15T16:33:47.296Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-15T16:33:57.905Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-15T16:34:27.381Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-15T16:34:35.681Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-15T16:35:15.710Z"
   },
   {
    "duration": 21,
    "start_time": "2022-08-15T16:36:37.242Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-15T16:39:13.241Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-15T16:46:09.064Z"
   },
   {
    "duration": 287,
    "start_time": "2022-08-15T16:46:53.656Z"
   },
   {
    "duration": 200,
    "start_time": "2022-08-15T16:47:09.591Z"
   },
   {
    "duration": 316,
    "start_time": "2022-08-15T16:47:23.249Z"
   },
   {
    "duration": 393,
    "start_time": "2022-08-15T16:47:34.702Z"
   },
   {
    "duration": 209,
    "start_time": "2022-08-15T16:47:42.330Z"
   },
   {
    "duration": 1131,
    "start_time": "2022-08-15T16:48:48.912Z"
   },
   {
    "duration": 82,
    "start_time": "2022-08-15T16:48:50.045Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-15T16:48:50.129Z"
   },
   {
    "duration": 19,
    "start_time": "2022-08-15T16:48:50.142Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-15T16:48:50.164Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-15T16:48:50.170Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-15T16:48:50.185Z"
   },
   {
    "duration": 16,
    "start_time": "2022-08-15T16:48:50.197Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-15T16:48:50.215Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-15T16:48:50.232Z"
   },
   {
    "duration": 19,
    "start_time": "2022-08-15T16:48:50.244Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-15T16:48:50.265Z"
   },
   {
    "duration": 19,
    "start_time": "2022-08-15T16:48:50.275Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-15T16:48:50.304Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-15T16:48:50.311Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-15T16:48:50.321Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-15T16:48:50.330Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-15T16:48:50.338Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-15T16:48:50.351Z"
   },
   {
    "duration": 268,
    "start_time": "2022-08-15T16:48:50.363Z"
   },
   {
    "duration": 142,
    "start_time": "2022-08-15T16:48:50.633Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-15T16:48:50.777Z"
   },
   {
    "duration": 311,
    "start_time": "2022-08-15T16:48:50.792Z"
   },
   {
    "duration": 217,
    "start_time": "2022-08-15T16:48:51.105Z"
   },
   {
    "duration": 288,
    "start_time": "2022-08-15T16:48:51.324Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-15T16:48:51.613Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-15T16:48:51.620Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-15T16:48:51.630Z"
   },
   {
    "duration": 232,
    "start_time": "2022-08-15T16:48:51.645Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-15T16:48:51.879Z"
   },
   {
    "duration": 333,
    "start_time": "2022-08-15T16:48:51.890Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-15T16:48:52.225Z"
   },
   {
    "duration": 163,
    "start_time": "2022-08-15T16:48:52.240Z"
   },
   {
    "duration": 146,
    "start_time": "2022-08-15T16:48:52.404Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-15T16:48:52.553Z"
   },
   {
    "duration": 171,
    "start_time": "2022-08-15T16:48:52.561Z"
   },
   {
    "duration": 229,
    "start_time": "2022-08-15T16:48:52.734Z"
   },
   {
    "duration": 164,
    "start_time": "2022-08-15T16:48:52.965Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-15T16:48:53.131Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-15T16:48:53.138Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-15T16:48:53.152Z"
   },
   {
    "duration": 254,
    "start_time": "2022-08-15T16:48:53.163Z"
   },
   {
    "duration": 32,
    "start_time": "2022-08-15T16:48:53.418Z"
   },
   {
    "duration": 177,
    "start_time": "2022-08-15T16:48:53.452Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-15T16:48:53.632Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-15T16:48:53.641Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-15T16:48:53.657Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-15T16:48:53.703Z"
   },
   {
    "duration": 23,
    "start_time": "2022-08-15T16:48:53.714Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-15T16:48:53.739Z"
   },
   {
    "duration": 1132,
    "start_time": "2022-08-15T16:50:22.732Z"
   },
   {
    "duration": 81,
    "start_time": "2022-08-15T16:50:23.866Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-15T16:50:23.950Z"
   },
   {
    "duration": 24,
    "start_time": "2022-08-15T16:50:23.965Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-15T16:50:23.990Z"
   },
   {
    "duration": 19,
    "start_time": "2022-08-15T16:50:23.999Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-15T16:50:24.020Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-15T16:50:24.030Z"
   },
   {
    "duration": 19,
    "start_time": "2022-08-15T16:50:24.046Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-15T16:50:24.068Z"
   },
   {
    "duration": 20,
    "start_time": "2022-08-15T16:50:24.080Z"
   },
   {
    "duration": 19,
    "start_time": "2022-08-15T16:50:24.102Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-15T16:50:24.123Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-15T16:50:24.137Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-15T16:50:24.153Z"
   },
   {
    "duration": 16,
    "start_time": "2022-08-15T16:50:24.168Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-15T16:50:24.186Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-15T16:50:24.203Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-15T16:50:24.216Z"
   },
   {
    "duration": 237,
    "start_time": "2022-08-15T16:50:24.230Z"
   },
   {
    "duration": 158,
    "start_time": "2022-08-15T16:50:24.469Z"
   },
   {
    "duration": 20,
    "start_time": "2022-08-15T16:50:24.629Z"
   },
   {
    "duration": 286,
    "start_time": "2022-08-15T16:50:24.651Z"
   },
   {
    "duration": 204,
    "start_time": "2022-08-15T16:50:24.939Z"
   },
   {
    "duration": 275,
    "start_time": "2022-08-15T16:50:25.145Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-15T16:50:25.423Z"
   },
   {
    "duration": 246,
    "start_time": "2022-08-15T16:50:25.437Z"
   },
   {
    "duration": 16,
    "start_time": "2022-08-15T16:50:25.688Z"
   },
   {
    "duration": 310,
    "start_time": "2022-08-15T16:50:25.706Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-15T16:50:26.018Z"
   },
   {
    "duration": 147,
    "start_time": "2022-08-15T16:50:26.033Z"
   },
   {
    "duration": 145,
    "start_time": "2022-08-15T16:50:26.182Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-15T16:50:26.329Z"
   },
   {
    "duration": 170,
    "start_time": "2022-08-15T16:50:26.335Z"
   },
   {
    "duration": 236,
    "start_time": "2022-08-15T16:50:26.507Z"
   },
   {
    "duration": 197,
    "start_time": "2022-08-15T16:50:26.745Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-15T16:50:26.944Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-15T16:50:26.952Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-15T16:50:26.969Z"
   },
   {
    "duration": 231,
    "start_time": "2022-08-15T16:50:26.982Z"
   },
   {
    "duration": 40,
    "start_time": "2022-08-15T16:50:27.215Z"
   },
   {
    "duration": 228,
    "start_time": "2022-08-15T16:50:27.257Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-15T16:50:27.486Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-15T16:50:27.503Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-15T16:50:27.520Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-15T16:50:27.536Z"
   },
   {
    "duration": 59,
    "start_time": "2022-08-15T16:50:27.550Z"
   },
   {
    "duration": 18,
    "start_time": "2022-08-15T16:50:27.611Z"
   },
   {
    "duration": 41,
    "start_time": "2022-08-16T12:45:04.282Z"
   },
   {
    "duration": 1269,
    "start_time": "2022-08-16T12:45:07.270Z"
   },
   {
    "duration": 200,
    "start_time": "2022-08-16T12:45:08.540Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T12:45:08.742Z"
   },
   {
    "duration": 35,
    "start_time": "2022-08-16T12:45:08.754Z"
   },
   {
    "duration": 24,
    "start_time": "2022-08-16T12:45:08.791Z"
   },
   {
    "duration": 30,
    "start_time": "2022-08-16T12:45:08.817Z"
   },
   {
    "duration": 22,
    "start_time": "2022-08-16T12:45:08.849Z"
   },
   {
    "duration": 29,
    "start_time": "2022-08-16T12:45:08.872Z"
   },
   {
    "duration": 38,
    "start_time": "2022-08-16T12:45:08.902Z"
   },
   {
    "duration": 28,
    "start_time": "2022-08-16T12:45:08.942Z"
   },
   {
    "duration": 37,
    "start_time": "2022-08-16T12:45:08.971Z"
   },
   {
    "duration": 27,
    "start_time": "2022-08-16T12:45:09.010Z"
   },
   {
    "duration": 38,
    "start_time": "2022-08-16T12:45:09.038Z"
   },
   {
    "duration": 23,
    "start_time": "2022-08-16T12:45:09.079Z"
   },
   {
    "duration": 21,
    "start_time": "2022-08-16T12:45:09.103Z"
   },
   {
    "duration": 31,
    "start_time": "2022-08-16T12:45:09.126Z"
   },
   {
    "duration": 28,
    "start_time": "2022-08-16T12:45:09.158Z"
   },
   {
    "duration": 38,
    "start_time": "2022-08-16T12:45:09.188Z"
   },
   {
    "duration": 29,
    "start_time": "2022-08-16T12:45:09.228Z"
   },
   {
    "duration": 205,
    "start_time": "2022-08-16T12:45:09.259Z"
   },
   {
    "duration": 119,
    "start_time": "2022-08-16T12:45:09.465Z"
   },
   {
    "duration": 16,
    "start_time": "2022-08-16T12:45:09.586Z"
   },
   {
    "duration": 234,
    "start_time": "2022-08-16T12:45:09.603Z"
   },
   {
    "duration": 154,
    "start_time": "2022-08-16T12:45:09.838Z"
   },
   {
    "duration": 306,
    "start_time": "2022-08-16T12:45:09.993Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-16T12:45:10.301Z"
   },
   {
    "duration": 184,
    "start_time": "2022-08-16T12:45:10.316Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T12:45:10.503Z"
   },
   {
    "duration": 312,
    "start_time": "2022-08-16T12:45:10.515Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T12:45:10.829Z"
   },
   {
    "duration": 117,
    "start_time": "2022-08-16T12:45:10.842Z"
   },
   {
    "duration": 109,
    "start_time": "2022-08-16T12:45:10.961Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T12:45:11.073Z"
   },
   {
    "duration": 125,
    "start_time": "2022-08-16T12:45:11.079Z"
   },
   {
    "duration": 182,
    "start_time": "2022-08-16T12:45:11.206Z"
   },
   {
    "duration": 137,
    "start_time": "2022-08-16T12:45:11.389Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T12:45:11.528Z"
   },
   {
    "duration": 18,
    "start_time": "2022-08-16T12:45:11.533Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T12:45:11.558Z"
   },
   {
    "duration": 215,
    "start_time": "2022-08-16T12:45:11.567Z"
   },
   {
    "duration": 26,
    "start_time": "2022-08-16T12:45:11.785Z"
   },
   {
    "duration": 152,
    "start_time": "2022-08-16T12:45:11.813Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-16T12:45:11.966Z"
   },
   {
    "duration": 1331,
    "start_time": "2022-08-16T12:45:11.974Z"
   },
   {
    "duration": 732,
    "start_time": "2022-08-16T12:45:13.306Z"
   },
   {
    "duration": 429,
    "start_time": "2022-08-16T12:45:14.040Z"
   },
   {
    "duration": 222,
    "start_time": "2022-08-16T12:45:14.470Z"
   },
   {
    "duration": 1060,
    "start_time": "2022-08-16T12:45:14.694Z"
   },
   {
    "duration": 3,
    "start_time": "2022-08-16T12:45:25.649Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-16T12:45:37.643Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T12:45:42.490Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T12:45:57.942Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T12:46:02.582Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-16T12:46:07.261Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T12:47:23.132Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T12:48:13.780Z"
   },
   {
    "duration": 65,
    "start_time": "2022-08-16T12:48:42.639Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T12:48:52.380Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-16T12:52:07.952Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-16T12:53:20.731Z"
   },
   {
    "duration": 16,
    "start_time": "2022-08-16T12:53:28.613Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T12:53:49.717Z"
   },
   {
    "duration": 184,
    "start_time": "2022-08-16T12:56:17.700Z"
   },
   {
    "duration": 157,
    "start_time": "2022-08-16T12:56:23.232Z"
   },
   {
    "duration": 162,
    "start_time": "2022-08-16T12:56:40.132Z"
   },
   {
    "duration": 154,
    "start_time": "2022-08-16T12:56:46.021Z"
   },
   {
    "duration": 160,
    "start_time": "2022-08-16T12:56:52.620Z"
   },
   {
    "duration": 324,
    "start_time": "2022-08-16T12:57:12.439Z"
   },
   {
    "duration": 178,
    "start_time": "2022-08-16T12:57:21.932Z"
   },
   {
    "duration": 254,
    "start_time": "2022-08-16T12:57:40.114Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T12:58:49.052Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-16T13:00:32.541Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-16T13:00:37.854Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T13:00:45.947Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T13:02:31.394Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-16T13:05:59.851Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T13:06:31.950Z"
   },
   {
    "duration": 86,
    "start_time": "2022-08-16T13:06:43.951Z"
   },
   {
    "duration": 207,
    "start_time": "2022-08-16T13:07:51.430Z"
   },
   {
    "duration": 87,
    "start_time": "2022-08-16T13:08:03.399Z"
   },
   {
    "duration": 82,
    "start_time": "2022-08-16T13:08:49.882Z"
   },
   {
    "duration": 108,
    "start_time": "2022-08-16T13:08:54.913Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-16T13:09:10.891Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T13:09:59.070Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T13:10:05.950Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T13:10:15.930Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T13:10:32.690Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T13:10:37.073Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T13:10:49.320Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T13:11:04.258Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T13:12:13.175Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T13:18:12.581Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-16T13:18:22.648Z"
   },
   {
    "duration": 128,
    "start_time": "2022-08-16T13:19:16.867Z"
   },
   {
    "duration": 1125,
    "start_time": "2022-08-16T13:19:35.692Z"
   },
   {
    "duration": 1968,
    "start_time": "2022-08-16T13:19:52.950Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T13:20:49.810Z"
   },
   {
    "duration": 79,
    "start_time": "2022-08-16T13:22:01.311Z"
   },
   {
    "duration": 128,
    "start_time": "2022-08-16T13:22:29.739Z"
   },
   {
    "duration": 76,
    "start_time": "2022-08-16T13:23:42.178Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T13:25:23.494Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T13:28:12.370Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T13:28:26.366Z"
   },
   {
    "duration": 3,
    "start_time": "2022-08-16T13:28:43.572Z"
   },
   {
    "duration": 85,
    "start_time": "2022-08-16T13:28:43.577Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-16T13:28:43.664Z"
   },
   {
    "duration": 36,
    "start_time": "2022-08-16T13:28:43.677Z"
   },
   {
    "duration": 26,
    "start_time": "2022-08-16T13:28:43.716Z"
   },
   {
    "duration": 49,
    "start_time": "2022-08-16T13:28:43.744Z"
   },
   {
    "duration": 33,
    "start_time": "2022-08-16T13:28:43.795Z"
   },
   {
    "duration": 30,
    "start_time": "2022-08-16T13:28:43.831Z"
   },
   {
    "duration": 38,
    "start_time": "2022-08-16T13:28:43.863Z"
   },
   {
    "duration": 33,
    "start_time": "2022-08-16T13:28:43.903Z"
   },
   {
    "duration": 34,
    "start_time": "2022-08-16T13:28:43.937Z"
   },
   {
    "duration": 32,
    "start_time": "2022-08-16T13:28:43.973Z"
   },
   {
    "duration": 24,
    "start_time": "2022-08-16T13:28:44.007Z"
   },
   {
    "duration": 35,
    "start_time": "2022-08-16T13:28:44.034Z"
   },
   {
    "duration": 28,
    "start_time": "2022-08-16T13:28:44.070Z"
   },
   {
    "duration": 45,
    "start_time": "2022-08-16T13:28:44.100Z"
   },
   {
    "duration": 34,
    "start_time": "2022-08-16T13:28:44.146Z"
   },
   {
    "duration": 27,
    "start_time": "2022-08-16T13:28:44.182Z"
   },
   {
    "duration": 28,
    "start_time": "2022-08-16T13:28:44.211Z"
   },
   {
    "duration": 36,
    "start_time": "2022-08-16T13:28:44.241Z"
   },
   {
    "duration": 113,
    "start_time": "2022-08-16T13:28:44.279Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T13:28:44.394Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-16T13:28:44.401Z"
   },
   {
    "duration": 54,
    "start_time": "2022-08-16T13:28:44.420Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.476Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.477Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.478Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.479Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.480Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.482Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.482Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.483Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.484Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.485Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.486Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.487Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.488Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.489Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.490Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.491Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.492Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.493Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.495Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.496Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.497Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.498Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.499Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.500Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.501Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.502Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.504Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.505Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.506Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.507Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.559Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.560Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.561Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.562Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:28:44.563Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T13:29:28.516Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T13:29:44.826Z"
   },
   {
    "duration": 1560,
    "start_time": "2022-08-16T13:38:50.389Z"
   },
   {
    "duration": 89,
    "start_time": "2022-08-16T13:39:07.134Z"
   },
   {
    "duration": 138,
    "start_time": "2022-08-16T13:39:16.944Z"
   },
   {
    "duration": 1193,
    "start_time": "2022-08-16T13:39:39.170Z"
   },
   {
    "duration": 2484,
    "start_time": "2022-08-16T13:40:10.250Z"
   },
   {
    "duration": 3,
    "start_time": "2022-08-16T13:40:16.359Z"
   },
   {
    "duration": 76,
    "start_time": "2022-08-16T13:40:16.365Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T13:40:16.443Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T13:40:16.455Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-16T13:40:16.468Z"
   },
   {
    "duration": 20,
    "start_time": "2022-08-16T13:40:16.482Z"
   },
   {
    "duration": 18,
    "start_time": "2022-08-16T13:40:16.504Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T13:40:16.524Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T13:40:16.534Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-16T13:40:16.546Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T13:40:16.562Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T13:40:16.575Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-16T13:40:16.586Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-16T13:40:16.601Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T13:40:16.610Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T13:40:16.620Z"
   },
   {
    "duration": 40,
    "start_time": "2022-08-16T13:40:16.631Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T13:40:16.672Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-16T13:40:16.682Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T13:40:16.697Z"
   },
   {
    "duration": 104,
    "start_time": "2022-08-16T13:40:16.706Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T13:40:16.812Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T13:40:16.818Z"
   },
   {
    "duration": 3414,
    "start_time": "2022-08-16T13:40:16.825Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.240Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.241Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.242Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.243Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.244Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.245Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.246Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.247Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.247Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.249Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.249Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.250Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.251Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.252Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.253Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.254Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.255Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.256Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.257Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.257Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.258Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.259Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.260Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.261Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.262Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.263Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.264Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.265Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.266Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.267Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.268Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.268Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.269Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.270Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-16T13:40:20.271Z"
   },
   {
    "duration": 96,
    "start_time": "2022-08-16T13:40:50.271Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T13:40:53.266Z"
   },
   {
    "duration": 3,
    "start_time": "2022-08-16T13:41:02.665Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-16T13:41:36.232Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T13:41:53.241Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T13:42:08.470Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T13:42:21.530Z"
   },
   {
    "duration": 66,
    "start_time": "2022-08-16T13:44:07.016Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T13:47:02.233Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-16T13:47:21.861Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-16T13:47:33.370Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T13:48:28.099Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T13:48:38.135Z"
   },
   {
    "duration": 3,
    "start_time": "2022-08-16T13:48:47.432Z"
   },
   {
    "duration": 75,
    "start_time": "2022-08-16T13:48:47.437Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T13:48:47.514Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T13:48:47.523Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T13:48:47.535Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T13:48:47.540Z"
   },
   {
    "duration": 3,
    "start_time": "2022-08-16T13:48:47.551Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T13:48:47.555Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T13:48:47.564Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-16T13:48:47.575Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T13:48:47.583Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T13:48:47.596Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-16T13:48:47.603Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T13:48:47.613Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-16T13:48:47.619Z"
   },
   {
    "duration": 33,
    "start_time": "2022-08-16T13:48:47.628Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T13:48:47.663Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T13:48:47.675Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T13:48:47.685Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-16T13:48:47.697Z"
   },
   {
    "duration": 131,
    "start_time": "2022-08-16T13:48:47.705Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T13:48:47.837Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-16T13:48:47.844Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T13:48:47.862Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T13:48:47.869Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-16T13:48:47.875Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-16T13:48:47.884Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-16T13:48:47.898Z"
   },
   {
    "duration": 3,
    "start_time": "2022-08-16T13:48:47.914Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T13:48:47.919Z"
   },
   {
    "duration": 31,
    "start_time": "2022-08-16T13:48:47.929Z"
   },
   {
    "duration": 169,
    "start_time": "2022-08-16T13:48:47.961Z"
   },
   {
    "duration": 112,
    "start_time": "2022-08-16T13:48:48.132Z"
   },
   {
    "duration": 21,
    "start_time": "2022-08-16T13:48:48.246Z"
   },
   {
    "duration": 167,
    "start_time": "2022-08-16T13:48:48.269Z"
   },
   {
    "duration": 163,
    "start_time": "2022-08-16T13:48:48.437Z"
   },
   {
    "duration": 236,
    "start_time": "2022-08-16T13:48:48.601Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T13:48:48.838Z"
   },
   {
    "duration": 185,
    "start_time": "2022-08-16T13:48:48.859Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-16T13:48:49.046Z"
   },
   {
    "duration": 303,
    "start_time": "2022-08-16T13:48:49.068Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T13:48:49.373Z"
   },
   {
    "duration": 128,
    "start_time": "2022-08-16T13:48:49.386Z"
   },
   {
    "duration": 111,
    "start_time": "2022-08-16T13:48:49.516Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T13:48:49.628Z"
   },
   {
    "duration": 134,
    "start_time": "2022-08-16T13:48:49.634Z"
   },
   {
    "duration": 126,
    "start_time": "2022-08-16T13:48:49.769Z"
   },
   {
    "duration": 203,
    "start_time": "2022-08-16T13:48:49.897Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T13:48:50.101Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-16T13:48:50.107Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T13:48:50.120Z"
   },
   {
    "duration": 191,
    "start_time": "2022-08-16T13:48:50.131Z"
   },
   {
    "duration": 25,
    "start_time": "2022-08-16T13:48:50.323Z"
   },
   {
    "duration": 28,
    "start_time": "2022-08-16T13:48:50.360Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T13:48:50.390Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-16T13:48:50.396Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T13:48:50.410Z"
   },
   {
    "duration": 44,
    "start_time": "2022-08-16T13:48:50.420Z"
   },
   {
    "duration": 25,
    "start_time": "2022-08-16T13:48:50.465Z"
   },
   {
    "duration": 72,
    "start_time": "2022-08-16T13:48:50.491Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T13:49:18.656Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-16T13:49:23.978Z"
   },
   {
    "duration": 2,
    "start_time": "2022-08-16T13:49:30.563Z"
   },
   {
    "duration": 92,
    "start_time": "2022-08-16T13:49:30.567Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T13:49:30.660Z"
   },
   {
    "duration": 31,
    "start_time": "2022-08-16T13:49:30.670Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-16T13:49:30.702Z"
   },
   {
    "duration": 30,
    "start_time": "2022-08-16T13:49:30.716Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T13:49:30.748Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-16T13:49:30.759Z"
   },
   {
    "duration": 22,
    "start_time": "2022-08-16T13:49:30.775Z"
   },
   {
    "duration": 22,
    "start_time": "2022-08-16T13:49:30.798Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-16T13:49:30.822Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-16T13:49:30.839Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-16T13:49:30.853Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T13:49:30.868Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T13:49:30.878Z"
   },
   {
    "duration": 20,
    "start_time": "2022-08-16T13:49:30.888Z"
   },
   {
    "duration": 18,
    "start_time": "2022-08-16T13:49:30.909Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T13:49:30.928Z"
   },
   {
    "duration": 27,
    "start_time": "2022-08-16T13:49:30.941Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T13:49:30.970Z"
   },
   {
    "duration": 98,
    "start_time": "2022-08-16T13:49:30.980Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T13:49:31.080Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-16T13:49:31.086Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T13:49:31.100Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-16T13:49:31.109Z"
   },
   {
    "duration": 23,
    "start_time": "2022-08-16T13:49:31.122Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-16T13:49:31.146Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T13:49:31.162Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T13:49:31.175Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T13:49:31.188Z"
   },
   {
    "duration": 163,
    "start_time": "2022-08-16T13:49:31.197Z"
   },
   {
    "duration": 110,
    "start_time": "2022-08-16T13:49:31.361Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T13:49:31.472Z"
   },
   {
    "duration": 178,
    "start_time": "2022-08-16T13:49:31.484Z"
   },
   {
    "duration": 166,
    "start_time": "2022-08-16T13:49:31.664Z"
   },
   {
    "duration": 305,
    "start_time": "2022-08-16T13:49:31.832Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T13:49:32.138Z"
   },
   {
    "duration": 185,
    "start_time": "2022-08-16T13:49:32.151Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T13:49:32.338Z"
   },
   {
    "duration": 289,
    "start_time": "2022-08-16T13:49:32.359Z"
   },
   {
    "duration": 18,
    "start_time": "2022-08-16T13:49:32.650Z"
   },
   {
    "duration": 133,
    "start_time": "2022-08-16T13:49:32.670Z"
   },
   {
    "duration": 202,
    "start_time": "2022-08-16T13:49:32.805Z"
   },
   {
    "duration": 3,
    "start_time": "2022-08-16T13:49:33.060Z"
   },
   {
    "duration": 223,
    "start_time": "2022-08-16T13:49:33.065Z"
   },
   {
    "duration": 213,
    "start_time": "2022-08-16T13:49:33.289Z"
   },
   {
    "duration": 396,
    "start_time": "2022-08-16T13:49:33.503Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T13:49:33.901Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-16T13:49:33.959Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T13:49:33.972Z"
   },
   {
    "duration": 314,
    "start_time": "2022-08-16T13:49:33.983Z"
   },
   {
    "duration": 23,
    "start_time": "2022-08-16T13:49:34.298Z"
   },
   {
    "duration": 38,
    "start_time": "2022-08-16T13:49:34.323Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T13:49:34.362Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-16T13:49:34.368Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T13:49:34.382Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T13:49:34.392Z"
   },
   {
    "duration": 21,
    "start_time": "2022-08-16T13:49:34.402Z"
   },
   {
    "duration": 40,
    "start_time": "2022-08-16T13:49:34.425Z"
   },
   {
    "duration": 41,
    "start_time": "2022-08-16T13:51:11.620Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T13:51:19.132Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T13:51:30.978Z"
   },
   {
    "duration": 28,
    "start_time": "2022-08-16T13:52:58.617Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-16T13:59:35.871Z"
   },
   {
    "duration": 1038,
    "start_time": "2022-08-16T14:00:33.587Z"
   },
   {
    "duration": 73,
    "start_time": "2022-08-16T14:00:34.626Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T14:00:34.700Z"
   },
   {
    "duration": 21,
    "start_time": "2022-08-16T14:00:34.711Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T14:00:34.734Z"
   },
   {
    "duration": 20,
    "start_time": "2022-08-16T14:00:34.746Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-16T14:00:34.768Z"
   },
   {
    "duration": 26,
    "start_time": "2022-08-16T14:00:34.783Z"
   },
   {
    "duration": 27,
    "start_time": "2022-08-16T14:00:34.810Z"
   },
   {
    "duration": 21,
    "start_time": "2022-08-16T14:00:34.839Z"
   },
   {
    "duration": 25,
    "start_time": "2022-08-16T14:00:34.861Z"
   },
   {
    "duration": 27,
    "start_time": "2022-08-16T14:00:34.887Z"
   },
   {
    "duration": 25,
    "start_time": "2022-08-16T14:00:34.915Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-16T14:00:34.942Z"
   },
   {
    "duration": 26,
    "start_time": "2022-08-16T14:00:34.957Z"
   },
   {
    "duration": 24,
    "start_time": "2022-08-16T14:00:34.985Z"
   },
   {
    "duration": 28,
    "start_time": "2022-08-16T14:00:35.010Z"
   },
   {
    "duration": 35,
    "start_time": "2022-08-16T14:00:35.039Z"
   },
   {
    "duration": 26,
    "start_time": "2022-08-16T14:00:35.075Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T14:00:35.103Z"
   },
   {
    "duration": 128,
    "start_time": "2022-08-16T14:00:35.116Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T14:00:35.245Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-16T14:00:35.259Z"
   },
   {
    "duration": 24,
    "start_time": "2022-08-16T14:00:35.278Z"
   },
   {
    "duration": 27,
    "start_time": "2022-08-16T14:00:35.304Z"
   },
   {
    "duration": 16,
    "start_time": "2022-08-16T14:00:35.333Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T14:00:35.350Z"
   },
   {
    "duration": 23,
    "start_time": "2022-08-16T14:00:35.363Z"
   },
   {
    "duration": 26,
    "start_time": "2022-08-16T14:00:35.387Z"
   },
   {
    "duration": 177,
    "start_time": "2022-08-16T14:00:35.414Z"
   },
   {
    "duration": 114,
    "start_time": "2022-08-16T14:00:35.592Z"
   },
   {
    "duration": 23,
    "start_time": "2022-08-16T14:00:35.709Z"
   },
   {
    "duration": 240,
    "start_time": "2022-08-16T14:00:35.733Z"
   },
   {
    "duration": 167,
    "start_time": "2022-08-16T14:00:35.975Z"
   },
   {
    "duration": 279,
    "start_time": "2022-08-16T14:00:36.143Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T14:00:36.424Z"
   },
   {
    "duration": 188,
    "start_time": "2022-08-16T14:00:36.435Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T14:00:36.624Z"
   },
   {
    "duration": 325,
    "start_time": "2022-08-16T14:00:36.634Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-16T14:00:36.961Z"
   },
   {
    "duration": 145,
    "start_time": "2022-08-16T14:00:36.982Z"
   },
   {
    "duration": 109,
    "start_time": "2022-08-16T14:00:37.129Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T14:00:37.239Z"
   },
   {
    "duration": 130,
    "start_time": "2022-08-16T14:00:37.244Z"
   },
   {
    "duration": 173,
    "start_time": "2022-08-16T14:00:37.376Z"
   },
   {
    "duration": 123,
    "start_time": "2022-08-16T14:00:37.551Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T14:00:37.676Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T14:00:37.681Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T14:00:37.692Z"
   },
   {
    "duration": 210,
    "start_time": "2022-08-16T14:00:37.704Z"
   },
   {
    "duration": 24,
    "start_time": "2022-08-16T14:00:37.916Z"
   },
   {
    "duration": 142,
    "start_time": "2022-08-16T14:00:37.941Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T14:00:38.084Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-16T14:00:38.090Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T14:00:38.103Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-16T14:00:38.113Z"
   },
   {
    "duration": 40,
    "start_time": "2022-08-16T14:00:38.121Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T14:00:38.162Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-16T14:00:55.242Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T14:02:36.386Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T14:08:33.570Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T14:09:20.866Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T14:09:31.214Z"
   },
   {
    "duration": 86,
    "start_time": "2022-08-16T14:10:13.126Z"
   },
   {
    "duration": 74,
    "start_time": "2022-08-16T14:11:09.058Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T14:11:17.427Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T14:11:48.528Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T14:26:27.366Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T14:27:27.353Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-16T14:28:29.855Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-16T14:29:25.171Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-16T14:33:18.513Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T14:33:30.549Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-16T14:33:37.269Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T14:34:02.033Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T14:34:18.299Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T14:35:41.401Z"
   },
   {
    "duration": 3,
    "start_time": "2022-08-16T14:35:59.853Z"
   },
   {
    "duration": 74,
    "start_time": "2022-08-16T14:35:59.858Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T14:35:59.933Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T14:35:59.942Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-16T14:35:59.953Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T14:35:59.960Z"
   },
   {
    "duration": 3,
    "start_time": "2022-08-16T14:35:59.972Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T14:35:59.976Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-16T14:35:59.985Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-16T14:36:00.002Z"
   },
   {
    "duration": 16,
    "start_time": "2022-08-16T14:36:00.010Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T14:36:00.027Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-16T14:36:00.039Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-16T14:36:00.058Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-16T14:36:00.073Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-16T14:36:00.088Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T14:36:00.095Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-16T14:36:00.107Z"
   },
   {
    "duration": 25,
    "start_time": "2022-08-16T14:36:00.115Z"
   },
   {
    "duration": 96,
    "start_time": "2022-08-16T14:36:00.141Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T14:36:00.239Z"
   },
   {
    "duration": 24,
    "start_time": "2022-08-16T14:36:00.246Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T14:36:00.272Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T14:36:00.284Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-16T14:36:00.294Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-16T14:36:00.308Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-16T14:36:00.323Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T14:36:00.339Z"
   },
   {
    "duration": 27,
    "start_time": "2022-08-16T14:36:00.344Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T14:36:00.372Z"
   },
   {
    "duration": 173,
    "start_time": "2022-08-16T14:36:00.382Z"
   },
   {
    "duration": 114,
    "start_time": "2022-08-16T14:36:00.556Z"
   },
   {
    "duration": 23,
    "start_time": "2022-08-16T14:36:00.671Z"
   },
   {
    "duration": 160,
    "start_time": "2022-08-16T14:36:00.696Z"
   },
   {
    "duration": 160,
    "start_time": "2022-08-16T14:36:00.859Z"
   },
   {
    "duration": 247,
    "start_time": "2022-08-16T14:36:01.020Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T14:36:01.269Z"
   },
   {
    "duration": 181,
    "start_time": "2022-08-16T14:36:01.280Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T14:36:01.463Z"
   },
   {
    "duration": 274,
    "start_time": "2022-08-16T14:36:01.473Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-16T14:36:01.759Z"
   },
   {
    "duration": 127,
    "start_time": "2022-08-16T14:36:01.772Z"
   },
   {
    "duration": 113,
    "start_time": "2022-08-16T14:36:01.900Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T14:36:02.014Z"
   },
   {
    "duration": 185,
    "start_time": "2022-08-16T14:36:02.020Z"
   },
   {
    "duration": 111,
    "start_time": "2022-08-16T14:36:02.206Z"
   },
   {
    "duration": 132,
    "start_time": "2022-08-16T14:36:02.318Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T14:36:02.458Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T14:36:02.465Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-16T14:36:02.476Z"
   },
   {
    "duration": 273,
    "start_time": "2022-08-16T14:36:02.489Z"
   },
   {
    "duration": 23,
    "start_time": "2022-08-16T14:36:02.764Z"
   },
   {
    "duration": 293,
    "start_time": "2022-08-16T14:36:02.788Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T14:36:03.083Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-16T14:36:03.089Z"
   },
   {
    "duration": 57,
    "start_time": "2022-08-16T14:36:03.104Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-16T14:36:03.162Z"
   },
   {
    "duration": 23,
    "start_time": "2022-08-16T14:36:03.176Z"
   },
   {
    "duration": 61,
    "start_time": "2022-08-16T14:36:03.200Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-16T14:37:11.623Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T14:37:25.943Z"
   },
   {
    "duration": 3,
    "start_time": "2022-08-16T14:37:29.360Z"
   },
   {
    "duration": 76,
    "start_time": "2022-08-16T14:37:29.365Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T14:37:29.442Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T14:37:29.452Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-16T14:37:29.463Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T14:37:29.470Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T14:37:29.483Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T14:37:29.489Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T14:37:29.498Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-16T14:37:29.509Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-16T14:37:29.517Z"
   },
   {
    "duration": 30,
    "start_time": "2022-08-16T14:37:29.530Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T14:37:29.561Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-16T14:37:29.567Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T14:37:29.574Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-16T14:37:29.583Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T14:37:29.591Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-16T14:37:29.603Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T14:37:29.612Z"
   },
   {
    "duration": 108,
    "start_time": "2022-08-16T14:37:29.623Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T14:37:29.732Z"
   },
   {
    "duration": 23,
    "start_time": "2022-08-16T14:37:29.738Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T14:37:29.762Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T14:37:29.768Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T14:37:29.774Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T14:37:29.786Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-16T14:37:29.798Z"
   },
   {
    "duration": 3,
    "start_time": "2022-08-16T14:37:29.813Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T14:37:29.817Z"
   },
   {
    "duration": 37,
    "start_time": "2022-08-16T14:37:29.827Z"
   },
   {
    "duration": 179,
    "start_time": "2022-08-16T14:37:29.866Z"
   },
   {
    "duration": 125,
    "start_time": "2022-08-16T14:37:30.046Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T14:37:30.173Z"
   },
   {
    "duration": 174,
    "start_time": "2022-08-16T14:37:30.185Z"
   },
   {
    "duration": 162,
    "start_time": "2022-08-16T14:37:30.360Z"
   },
   {
    "duration": 253,
    "start_time": "2022-08-16T14:37:30.524Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T14:37:30.778Z"
   },
   {
    "duration": 200,
    "start_time": "2022-08-16T14:37:30.789Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T14:37:30.991Z"
   },
   {
    "duration": 263,
    "start_time": "2022-08-16T14:37:31.001Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T14:37:31.267Z"
   },
   {
    "duration": 123,
    "start_time": "2022-08-16T14:37:31.280Z"
   },
   {
    "duration": 107,
    "start_time": "2022-08-16T14:37:31.404Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T14:37:31.512Z"
   },
   {
    "duration": 264,
    "start_time": "2022-08-16T14:37:31.518Z"
   },
   {
    "duration": 208,
    "start_time": "2022-08-16T14:37:31.784Z"
   },
   {
    "duration": 273,
    "start_time": "2022-08-16T14:37:31.993Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T14:37:32.268Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-16T14:37:32.273Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-16T14:37:32.290Z"
   },
   {
    "duration": 375,
    "start_time": "2022-08-16T14:37:32.308Z"
   },
   {
    "duration": 74,
    "start_time": "2022-08-16T14:37:32.685Z"
   },
   {
    "duration": 313,
    "start_time": "2022-08-16T14:37:32.761Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T14:37:33.075Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-16T14:37:33.082Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T14:37:33.095Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T14:37:33.105Z"
   },
   {
    "duration": 61,
    "start_time": "2022-08-16T14:37:33.114Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-16T14:37:33.177Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T14:37:41.952Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-16T14:40:29.009Z"
   },
   {
    "duration": 122,
    "start_time": "2022-08-16T14:40:34.488Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T14:41:23.930Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T14:42:23.052Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T14:42:57.687Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-16T14:44:13.565Z"
   },
   {
    "duration": 173,
    "start_time": "2022-08-16T14:48:21.276Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T14:49:40.877Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T14:50:06.187Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-16T14:50:13.484Z"
   },
   {
    "duration": 18,
    "start_time": "2022-08-16T14:50:25.172Z"
   },
   {
    "duration": 997,
    "start_time": "2022-08-16T14:54:07.214Z"
   },
   {
    "duration": 72,
    "start_time": "2022-08-16T14:54:08.213Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T14:54:08.286Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-16T14:54:08.298Z"
   },
   {
    "duration": 3,
    "start_time": "2022-08-16T14:54:08.313Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-16T14:54:08.317Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-16T14:54:08.333Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T14:54:08.346Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-16T14:54:08.356Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T14:54:08.372Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-16T14:54:08.382Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T14:54:08.397Z"
   },
   {
    "duration": 21,
    "start_time": "2022-08-16T14:54:08.406Z"
   },
   {
    "duration": 22,
    "start_time": "2022-08-16T14:54:08.428Z"
   },
   {
    "duration": 38,
    "start_time": "2022-08-16T14:54:08.451Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-16T14:54:08.490Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-16T14:54:08.508Z"
   },
   {
    "duration": 35,
    "start_time": "2022-08-16T14:54:08.524Z"
   },
   {
    "duration": 16,
    "start_time": "2022-08-16T14:54:08.560Z"
   },
   {
    "duration": 103,
    "start_time": "2022-08-16T14:54:08.578Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T14:54:08.683Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-16T14:54:08.690Z"
   },
   {
    "duration": 20,
    "start_time": "2022-08-16T14:54:08.707Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-16T14:54:08.728Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-16T14:54:08.735Z"
   },
   {
    "duration": 21,
    "start_time": "2022-08-16T14:54:08.753Z"
   },
   {
    "duration": 58,
    "start_time": "2022-08-16T14:54:08.775Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-16T14:54:08.836Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-16T14:54:08.852Z"
   },
   {
    "duration": 18,
    "start_time": "2022-08-16T14:54:08.868Z"
   },
   {
    "duration": 20,
    "start_time": "2022-08-16T14:54:08.887Z"
   },
   {
    "duration": 167,
    "start_time": "2022-08-16T14:54:08.908Z"
   },
   {
    "duration": 111,
    "start_time": "2022-08-16T14:54:09.077Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T14:54:09.190Z"
   },
   {
    "duration": 242,
    "start_time": "2022-08-16T14:54:09.201Z"
   },
   {
    "duration": 167,
    "start_time": "2022-08-16T14:54:09.445Z"
   },
   {
    "duration": 256,
    "start_time": "2022-08-16T14:54:09.614Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T14:54:09.872Z"
   },
   {
    "duration": 190,
    "start_time": "2022-08-16T14:54:09.883Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-16T14:54:10.074Z"
   },
   {
    "duration": 281,
    "start_time": "2022-08-16T14:54:10.085Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-16T14:54:10.368Z"
   },
   {
    "duration": 138,
    "start_time": "2022-08-16T14:54:10.383Z"
   },
   {
    "duration": 112,
    "start_time": "2022-08-16T14:54:10.523Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T14:54:10.636Z"
   },
   {
    "duration": 125,
    "start_time": "2022-08-16T14:54:10.641Z"
   },
   {
    "duration": 171,
    "start_time": "2022-08-16T14:54:10.768Z"
   },
   {
    "duration": 126,
    "start_time": "2022-08-16T14:54:10.940Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-16T14:54:11.068Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T14:54:11.073Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-16T14:54:11.083Z"
   },
   {
    "duration": 178,
    "start_time": "2022-08-16T14:54:11.092Z"
   },
   {
    "duration": 25,
    "start_time": "2022-08-16T14:54:11.272Z"
   },
   {
    "duration": 152,
    "start_time": "2022-08-16T14:54:11.298Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T14:54:11.451Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-16T14:54:11.461Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-16T14:54:11.480Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-16T14:54:11.491Z"
   },
   {
    "duration": 24,
    "start_time": "2022-08-16T14:54:11.499Z"
   },
   {
    "duration": 36,
    "start_time": "2022-08-16T14:54:11.525Z"
   },
   {
    "duration": 1030,
    "start_time": "2022-08-17T07:57:20.585Z"
   },
   {
    "duration": 82,
    "start_time": "2022-08-17T07:57:21.617Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-17T07:57:21.700Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-17T07:57:21.714Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-17T07:57:21.730Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-17T07:57:21.737Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-17T07:57:21.749Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-17T07:57:21.758Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-17T07:57:21.772Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-17T07:57:21.782Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-17T07:57:21.792Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-17T07:57:21.810Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-17T07:57:21.818Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-17T07:57:21.839Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-17T07:57:21.845Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-17T07:57:21.859Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-17T07:57:21.873Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-17T07:57:21.883Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-17T07:57:21.894Z"
   },
   {
    "duration": 105,
    "start_time": "2022-08-17T07:57:21.906Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-17T07:57:22.013Z"
   },
   {
    "duration": 20,
    "start_time": "2022-08-17T07:57:22.020Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-17T07:57:22.042Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-17T07:57:22.048Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-17T07:57:22.057Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-17T07:57:22.069Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-17T07:57:22.086Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-17T07:57:22.101Z"
   },
   {
    "duration": 23,
    "start_time": "2022-08-17T07:57:22.116Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-17T07:57:22.140Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-17T07:57:22.152Z"
   },
   {
    "duration": 178,
    "start_time": "2022-08-17T07:57:22.163Z"
   },
   {
    "duration": 122,
    "start_time": "2022-08-17T07:57:22.343Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-17T07:57:22.467Z"
   },
   {
    "duration": 278,
    "start_time": "2022-08-17T07:57:22.480Z"
   },
   {
    "duration": 167,
    "start_time": "2022-08-17T07:57:22.760Z"
   },
   {
    "duration": 300,
    "start_time": "2022-08-17T07:57:22.938Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-17T07:57:23.240Z"
   },
   {
    "duration": 182,
    "start_time": "2022-08-17T07:57:23.251Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-17T07:57:23.437Z"
   },
   {
    "duration": 299,
    "start_time": "2022-08-17T07:57:23.450Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-17T07:57:23.750Z"
   },
   {
    "duration": 129,
    "start_time": "2022-08-17T07:57:23.764Z"
   },
   {
    "duration": 118,
    "start_time": "2022-08-17T07:57:23.894Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-17T07:57:24.013Z"
   },
   {
    "duration": 135,
    "start_time": "2022-08-17T07:57:24.019Z"
   },
   {
    "duration": 194,
    "start_time": "2022-08-17T07:57:24.155Z"
   },
   {
    "duration": 131,
    "start_time": "2022-08-17T07:57:24.352Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-17T07:57:24.485Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-17T07:57:24.490Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-17T07:57:24.503Z"
   },
   {
    "duration": 189,
    "start_time": "2022-08-17T07:57:24.514Z"
   },
   {
    "duration": 34,
    "start_time": "2022-08-17T07:57:24.704Z"
   },
   {
    "duration": 151,
    "start_time": "2022-08-17T07:57:24.740Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-17T07:57:24.892Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-17T07:57:24.899Z"
   },
   {
    "duration": 25,
    "start_time": "2022-08-17T07:57:24.914Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-17T07:57:24.940Z"
   },
   {
    "duration": 21,
    "start_time": "2022-08-17T07:57:24.948Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-17T07:57:24.970Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-17T07:59:09.080Z"
   },
   {
    "duration": 1265,
    "start_time": "2022-08-17T09:31:36.541Z"
   },
   {
    "duration": 201,
    "start_time": "2022-08-17T09:31:37.808Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-17T09:31:38.015Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-17T09:31:38.029Z"
   },
   {
    "duration": 3,
    "start_time": "2022-08-17T09:31:38.042Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-17T09:31:38.046Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-17T09:31:38.062Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-17T09:31:38.070Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-17T09:31:38.082Z"
   },
   {
    "duration": 16,
    "start_time": "2022-08-17T09:31:38.111Z"
   },
   {
    "duration": 16,
    "start_time": "2022-08-17T09:31:38.129Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-17T09:31:38.146Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-17T09:31:38.155Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-17T09:31:38.163Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-17T09:31:38.176Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-17T09:31:38.185Z"
   },
   {
    "duration": 29,
    "start_time": "2022-08-17T09:31:38.194Z"
   },
   {
    "duration": 23,
    "start_time": "2022-08-17T09:31:38.224Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-17T09:31:38.248Z"
   },
   {
    "duration": 178,
    "start_time": "2022-08-17T09:31:38.261Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.442Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.444Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.445Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.447Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.448Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.449Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.451Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.452Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.454Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.455Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.456Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.458Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.459Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.460Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.462Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.463Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.464Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.465Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.467Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.468Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.469Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.470Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.472Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.473Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.474Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.475Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.476Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.477Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.478Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.479Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.517Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.518Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.519Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.519Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.520Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.520Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.521Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.521Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.523Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:31:38.525Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-17T09:32:55.124Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-17T09:36:09.924Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-17T09:36:20.346Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-17T09:36:22.558Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-17T09:36:25.457Z"
   },
   {
    "duration": 3,
    "start_time": "2022-08-17T09:36:28.258Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-17T09:36:31.698Z"
   },
   {
    "duration": 67,
    "start_time": "2022-08-17T09:38:01.658Z"
   },
   {
    "duration": 113,
    "start_time": "2022-08-17T09:38:06.678Z"
   },
   {
    "duration": 16,
    "start_time": "2022-08-17T09:38:19.378Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-17T09:38:28.178Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-17T09:38:39.978Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-17T09:39:10.539Z"
   },
   {
    "duration": 16,
    "start_time": "2022-08-17T09:41:05.958Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-17T09:41:53.559Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-17T09:42:52.478Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-17T09:43:08.838Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-17T09:43:17.207Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-17T09:43:20.566Z"
   },
   {
    "duration": 3,
    "start_time": "2022-08-17T09:43:23.678Z"
   },
   {
    "duration": 94,
    "start_time": "2022-08-17T09:43:23.683Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-17T09:43:23.779Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-17T09:43:23.789Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-17T09:43:23.799Z"
   },
   {
    "duration": 25,
    "start_time": "2022-08-17T09:43:23.804Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-17T09:43:23.837Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-17T09:43:23.843Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-17T09:43:23.859Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-17T09:43:23.872Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-17T09:43:23.884Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-17T09:43:23.900Z"
   },
   {
    "duration": 38,
    "start_time": "2022-08-17T09:43:23.910Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-17T09:43:23.951Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-17T09:43:23.961Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-17T09:43:23.972Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-17T09:43:23.979Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-17T09:43:23.991Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-17T09:43:24.000Z"
   },
   {
    "duration": 35,
    "start_time": "2022-08-17T09:43:24.019Z"
   },
   {
    "duration": 16,
    "start_time": "2022-08-17T09:43:24.056Z"
   },
   {
    "duration": 32,
    "start_time": "2022-08-17T09:43:24.074Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.108Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.109Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.110Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.118Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.119Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.120Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.120Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.121Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.123Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.124Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.125Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.125Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.126Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.127Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.127Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.128Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.128Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.129Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.130Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.131Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.131Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.132Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.132Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.133Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.138Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.140Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.141Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.142Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.143Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.144Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.144Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.145Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.146Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.147Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.148Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.148Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.149Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.150Z"
   },
   {
    "duration": 0,
    "start_time": "2022-08-17T09:43:24.151Z"
   },
   {
    "duration": 24,
    "start_time": "2022-08-17T09:44:03.258Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-17T09:44:14.758Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-17T09:44:45.863Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-17T09:45:06.739Z"
   },
   {
    "duration": 16,
    "start_time": "2022-08-17T09:46:06.862Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-17T09:46:27.698Z"
   },
   {
    "duration": 1119,
    "start_time": "2022-08-17T09:47:08.003Z"
   },
   {
    "duration": 73,
    "start_time": "2022-08-17T09:47:09.125Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-17T09:47:09.200Z"
   },
   {
    "duration": 47,
    "start_time": "2022-08-17T09:47:09.213Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-17T09:47:09.262Z"
   },
   {
    "duration": 25,
    "start_time": "2022-08-17T09:47:09.270Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-17T09:47:09.296Z"
   },
   {
    "duration": 27,
    "start_time": "2022-08-17T09:47:09.304Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-17T09:47:09.333Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-17T09:47:09.345Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-17T09:47:09.353Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-17T09:47:09.368Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-17T09:47:09.374Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-17T09:47:09.381Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-17T09:47:09.389Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-17T09:47:09.422Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-17T09:47:09.431Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-17T09:47:09.443Z"
   },
   {
    "duration": 23,
    "start_time": "2022-08-17T09:47:09.452Z"
   },
   {
    "duration": 16,
    "start_time": "2022-08-17T09:47:09.479Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-17T09:47:09.497Z"
   },
   {
    "duration": 24,
    "start_time": "2022-08-17T09:47:09.511Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-17T09:47:09.537Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-17T09:47:09.555Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-17T09:47:09.560Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-17T09:47:09.570Z"
   },
   {
    "duration": 39,
    "start_time": "2022-08-17T09:47:09.585Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-17T09:47:09.627Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-17T09:47:09.633Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-17T09:47:09.644Z"
   },
   {
    "duration": 213,
    "start_time": "2022-08-17T09:47:09.655Z"
   },
   {
    "duration": 126,
    "start_time": "2022-08-17T09:47:09.869Z"
   },
   {
    "duration": 26,
    "start_time": "2022-08-17T09:47:09.997Z"
   },
   {
    "duration": 253,
    "start_time": "2022-08-17T09:47:10.025Z"
   },
   {
    "duration": 200,
    "start_time": "2022-08-17T09:47:10.280Z"
   },
   {
    "duration": 303,
    "start_time": "2022-08-17T09:47:10.482Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-17T09:47:10.786Z"
   },
   {
    "duration": 205,
    "start_time": "2022-08-17T09:47:10.797Z"
   },
   {
    "duration": 20,
    "start_time": "2022-08-17T09:47:11.003Z"
   },
   {
    "duration": 302,
    "start_time": "2022-08-17T09:47:11.025Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-17T09:47:11.329Z"
   },
   {
    "duration": 145,
    "start_time": "2022-08-17T09:47:11.343Z"
   },
   {
    "duration": 140,
    "start_time": "2022-08-17T09:47:11.490Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-17T09:47:11.631Z"
   },
   {
    "duration": 139,
    "start_time": "2022-08-17T09:47:11.637Z"
   },
   {
    "duration": 186,
    "start_time": "2022-08-17T09:47:11.778Z"
   },
   {
    "duration": 143,
    "start_time": "2022-08-17T09:47:11.966Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-17T09:47:12.110Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-17T09:47:12.128Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-17T09:47:12.141Z"
   },
   {
    "duration": 182,
    "start_time": "2022-08-17T09:47:12.157Z"
   },
   {
    "duration": 31,
    "start_time": "2022-08-17T09:47:12.341Z"
   },
   {
    "duration": 175,
    "start_time": "2022-08-17T09:47:12.373Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-17T09:47:12.551Z"
   },
   {
    "duration": 16,
    "start_time": "2022-08-17T09:47:12.561Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-17T09:47:12.579Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-17T09:47:12.614Z"
   },
   {
    "duration": 40,
    "start_time": "2022-08-17T09:47:12.631Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-17T09:47:12.673Z"
   },
   {
    "duration": 119,
    "start_time": "2022-08-17T09:48:40.333Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-17T09:48:52.234Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-17T09:57:47.455Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-17T09:57:55.129Z"
   },
   {
    "duration": 19,
    "start_time": "2022-08-17T09:57:57.754Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-17T09:59:42.447Z"
   },
   {
    "duration": 1120,
    "start_time": "2022-08-17T10:01:15.205Z"
   },
   {
    "duration": 73,
    "start_time": "2022-08-17T10:01:16.328Z"
   },
   {
    "duration": 23,
    "start_time": "2022-08-17T10:01:16.403Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-17T10:01:16.430Z"
   },
   {
    "duration": 22,
    "start_time": "2022-08-17T10:01:16.446Z"
   },
   {
    "duration": 61,
    "start_time": "2022-08-17T10:01:16.469Z"
   },
   {
    "duration": 18,
    "start_time": "2022-08-17T10:01:16.532Z"
   },
   {
    "duration": 34,
    "start_time": "2022-08-17T10:01:16.552Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-17T10:01:16.588Z"
   },
   {
    "duration": 28,
    "start_time": "2022-08-17T10:01:16.603Z"
   },
   {
    "duration": 16,
    "start_time": "2022-08-17T10:01:16.633Z"
   },
   {
    "duration": 26,
    "start_time": "2022-08-17T10:01:16.650Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-17T10:01:16.677Z"
   },
   {
    "duration": 8,
    "start_time": "2022-08-17T10:01:16.693Z"
   },
   {
    "duration": 32,
    "start_time": "2022-08-17T10:01:16.702Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-17T10:01:16.736Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-17T10:01:16.751Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-17T10:01:16.764Z"
   },
   {
    "duration": 45,
    "start_time": "2022-08-17T10:01:16.780Z"
   },
   {
    "duration": 25,
    "start_time": "2022-08-17T10:01:16.827Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-17T10:01:16.853Z"
   },
   {
    "duration": 25,
    "start_time": "2022-08-17T10:01:16.868Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-17T10:01:16.895Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-17T10:01:16.918Z"
   },
   {
    "duration": 28,
    "start_time": "2022-08-17T10:01:16.929Z"
   },
   {
    "duration": 40,
    "start_time": "2022-08-17T10:01:16.958Z"
   },
   {
    "duration": 39,
    "start_time": "2022-08-17T10:01:16.999Z"
   },
   {
    "duration": 33,
    "start_time": "2022-08-17T10:01:17.039Z"
   },
   {
    "duration": 41,
    "start_time": "2022-08-17T10:01:17.073Z"
   },
   {
    "duration": 21,
    "start_time": "2022-08-17T10:01:17.126Z"
   },
   {
    "duration": 214,
    "start_time": "2022-08-17T10:01:17.148Z"
   },
   {
    "duration": 146,
    "start_time": "2022-08-17T10:01:17.364Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-17T10:01:17.521Z"
   },
   {
    "duration": 267,
    "start_time": "2022-08-17T10:01:17.536Z"
   },
   {
    "duration": 186,
    "start_time": "2022-08-17T10:01:17.805Z"
   },
   {
    "duration": 306,
    "start_time": "2022-08-17T10:01:17.993Z"
   },
   {
    "duration": 21,
    "start_time": "2022-08-17T10:01:18.301Z"
   },
   {
    "duration": 193,
    "start_time": "2022-08-17T10:01:18.324Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-17T10:01:18.519Z"
   },
   {
    "duration": 352,
    "start_time": "2022-08-17T10:01:18.533Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-17T10:01:18.889Z"
   },
   {
    "duration": 159,
    "start_time": "2022-08-17T10:01:18.903Z"
   },
   {
    "duration": 135,
    "start_time": "2022-08-17T10:01:19.064Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-17T10:01:19.201Z"
   },
   {
    "duration": 139,
    "start_time": "2022-08-17T10:01:19.213Z"
   },
   {
    "duration": 203,
    "start_time": "2022-08-17T10:01:19.353Z"
   },
   {
    "duration": 168,
    "start_time": "2022-08-17T10:01:19.558Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-17T10:01:19.728Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-17T10:01:19.734Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-17T10:01:19.744Z"
   },
   {
    "duration": 212,
    "start_time": "2022-08-17T10:01:19.756Z"
   },
   {
    "duration": 27,
    "start_time": "2022-08-17T10:01:19.969Z"
   },
   {
    "duration": 167,
    "start_time": "2022-08-17T10:01:19.998Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-17T10:01:20.167Z"
   },
   {
    "duration": 32,
    "start_time": "2022-08-17T10:01:20.174Z"
   },
   {
    "duration": 25,
    "start_time": "2022-08-17T10:01:20.210Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-17T10:01:20.237Z"
   },
   {
    "duration": 53,
    "start_time": "2022-08-17T10:01:20.256Z"
   },
   {
    "duration": 28,
    "start_time": "2022-08-17T10:01:20.310Z"
   },
   {
    "duration": 1278,
    "start_time": "2022-08-18T06:39:25.704Z"
   },
   {
    "duration": 204,
    "start_time": "2022-08-18T06:39:26.984Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-18T06:39:27.189Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-18T06:39:27.202Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-18T06:39:27.215Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-18T06:39:27.223Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-18T06:39:27.236Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-18T06:39:27.241Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-18T06:39:27.255Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-18T06:39:27.268Z"
   },
   {
    "duration": 29,
    "start_time": "2022-08-18T06:39:27.281Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-18T06:39:27.311Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-18T06:39:27.322Z"
   },
   {
    "duration": 7,
    "start_time": "2022-08-18T06:39:27.330Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-18T06:39:27.339Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-18T06:39:27.351Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-18T06:39:27.363Z"
   },
   {
    "duration": 34,
    "start_time": "2022-08-18T06:39:27.374Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-18T06:39:27.410Z"
   },
   {
    "duration": 6,
    "start_time": "2022-08-18T06:39:27.425Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-18T06:39:27.432Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-18T06:39:27.445Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-18T06:39:27.464Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-18T06:39:27.505Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-18T06:39:27.511Z"
   },
   {
    "duration": 15,
    "start_time": "2022-08-18T06:39:27.525Z"
   },
   {
    "duration": 17,
    "start_time": "2022-08-18T06:39:27.542Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-18T06:39:27.562Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-18T06:39:27.567Z"
   },
   {
    "duration": 34,
    "start_time": "2022-08-18T06:39:27.580Z"
   },
   {
    "duration": 205,
    "start_time": "2022-08-18T06:39:27.616Z"
   },
   {
    "duration": 130,
    "start_time": "2022-08-18T06:39:27.822Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-18T06:39:27.953Z"
   },
   {
    "duration": 271,
    "start_time": "2022-08-18T06:39:27.967Z"
   },
   {
    "duration": 185,
    "start_time": "2022-08-18T06:39:28.240Z"
   },
   {
    "duration": 333,
    "start_time": "2022-08-18T06:39:28.427Z"
   },
   {
    "duration": 10,
    "start_time": "2022-08-18T06:39:28.761Z"
   },
   {
    "duration": 184,
    "start_time": "2022-08-18T06:39:28.773Z"
   },
   {
    "duration": 9,
    "start_time": "2022-08-18T06:39:28.958Z"
   },
   {
    "duration": 308,
    "start_time": "2022-08-18T06:39:28.968Z"
   },
   {
    "duration": 13,
    "start_time": "2022-08-18T06:39:29.277Z"
   },
   {
    "duration": 136,
    "start_time": "2022-08-18T06:39:29.291Z"
   },
   {
    "duration": 130,
    "start_time": "2022-08-18T06:39:29.429Z"
   },
   {
    "duration": 4,
    "start_time": "2022-08-18T06:39:29.561Z"
   },
   {
    "duration": 142,
    "start_time": "2022-08-18T06:39:29.566Z"
   },
   {
    "duration": 188,
    "start_time": "2022-08-18T06:39:29.709Z"
   },
   {
    "duration": 129,
    "start_time": "2022-08-18T06:39:29.898Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-18T06:39:30.028Z"
   },
   {
    "duration": 14,
    "start_time": "2022-08-18T06:39:30.034Z"
   },
   {
    "duration": 21,
    "start_time": "2022-08-18T06:39:30.050Z"
   },
   {
    "duration": 192,
    "start_time": "2022-08-18T06:39:30.072Z"
   },
   {
    "duration": 24,
    "start_time": "2022-08-18T06:39:30.266Z"
   },
   {
    "duration": 147,
    "start_time": "2022-08-18T06:39:30.292Z"
   },
   {
    "duration": 5,
    "start_time": "2022-08-18T06:39:30.441Z"
   },
   {
    "duration": 16,
    "start_time": "2022-08-18T06:39:30.448Z"
   },
   {
    "duration": 11,
    "start_time": "2022-08-18T06:39:30.465Z"
   },
   {
    "duration": 40,
    "start_time": "2022-08-18T06:39:30.477Z"
   },
   {
    "duration": 35,
    "start_time": "2022-08-18T06:39:30.519Z"
   },
   {
    "duration": 12,
    "start_time": "2022-08-18T06:39:30.556Z"
   }
  ],
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": true,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {
    "height": "calc(100% - 180px)",
    "left": "10px",
    "top": "150px",
    "width": "190.594px"
   },
   "toc_section_display": true,
   "toc_window_display": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
